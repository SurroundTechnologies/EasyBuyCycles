//===============================================================================================
// <A4DN_GeneratedInformation>
// This code was generated using the Accelerator for .Net Code Generator.
// <A4DN_Template Name="BOS.Module.Entity.t4" Version="8.0.0.93" GeneratedDate="5/29/2024" />
// </A4DN_GeneratedInformation>
//===============================================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using A4DN.Core.BOS.Base;
using BOS.OrderManagement.Shared.Properties;
#if !SILVERLIGHT
using A4DN.Core.BOS.ValidationAttributes;  // Custom validation attributes
#endif

namespace BOS.CustomerDataEntity
{
    /// <summary>
    /// Represents data. Contains metadata that facilitates validation and advanced databinding.
    /// </summary>
    [DataContract]
    public class CustomerEntity : AB_BusinessObjectEntityBase
    {
        /// <summary>
        /// Entity information is defined in the lower level entity to maximize performance by making it static
        /// </summary>
        private static AB_EntityInfo _EntityInfo;
        /// <summary>
        /// Gets metadata information about the entity
        /// </summary>
        public override AB_EntityInfo ap_EntityInfo
        {
            get => _EntityInfo;
        }

        /// <summary>
        /// Initializes static members
        /// </summary>
        static private void RG_DoStaticInit()
        {
            // Set Message and Description Primary and Secondary Resources. 
            AB_BusinessObjectEntityBase.am_GetPropertyInfo(typeof(CustomerEntity), typeof(BOS.OrderManagement.Properties.MessageResource), typeof(MessageResource), typeof(BOS.OrderManagement.Properties.DescriptionResource), typeof(DescriptionResource), out _EntityInfo);
        }

        #region Properties

        [AB_Key(ap_IsAutoGenerated = true)]
        [AB_DoNotCopy]
        [Display(Name = "CUSTOMERNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [AB_AutoIncrement]
        [DataMember]
        public int? CustomerInternalID //Map Field: YD1CIID
        {
            get => am_GetPropertyValue(CustomerInternalIDProperty);
            set => am_SetPropertyValue(CustomerInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> CustomerInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(CustomerInternalID), DescriptionResource.CUSTOMERNUMBER, null);

        [AB_ReceivedBroadcastDataMember("CustomerInternalID")]
        [Display(Name = "PARENTCUSTOMERNUMBER", ResourceType = typeof(DescriptionResource))]
		[AB_Length(8)]
        [DataMember]
        public int? ParentInternalID //Map Field: YD1CPTID
        {
            get => am_GetPropertyValue(ParentInternalIDProperty);
            set => am_SetPropertyValue(ParentInternalIDProperty, value);
			}
        public static AB_PropertyMetadata<int?> ParentInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(ParentInternalID), DescriptionResource.PARENTCUSTOMERNUMBER, null);

        [Display(Name = "PARENTRELATIONSHIP", ResourceType = typeof(DescriptionResource))]
        [AB_Length(20)]
        [DataMember]
        [AB_ValidationMethod(typeof(ValidateParentRelationship), ErrorMessage = "Invalid Parent Relationship")]
        public string ParentRelationship //Map Field: YD1CPTRL
        {
            get => am_GetPropertyValue(ParentRelationshipProperty);
            set => am_SetPropertyValue(ParentRelationshipProperty, value);
        }
        public static AB_PropertyMetadata<string> ParentRelationshipProperty = am_CreatePropertyMetaData<string>(nameof(ParentRelationship), DescriptionResource.PARENTRELATIONSHIP, null);

        [Display(Name = "NAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [AB_BroadcastMember("CustomerName", AB_DataShouldBePassed.OnPreload)]
		[AB_RequiredField]
		[DataMember]
        public string Name //Map Field: YD1CNM
        {
            get => am_GetPropertyValue(NameProperty);
            set
            {
                if ((ap_RecordMode == AB_RecordMode.New || ap_RecordMode == AB_RecordMode.Open) && Name == LegalName)
                {
                    LegalName = value;
                }
                am_SetPropertyValue(NameProperty, value);
            }
        }
        public static AB_PropertyMetadata<string> NameProperty = am_CreatePropertyMetaData<string>(nameof(Name), DescriptionResource.NAME, null);

        [Display(Name = "LEGALNAME", ResourceType = typeof(DescriptionResource))]
		[AB_Length(50)]
        [DataMember]
        [AB_ValidationMethod(typeof(ValidateLegalName), ErrorMessage = "Legal Name is required and cannot be blank")]
        public string LegalName //Map Field: YD1CNMLG
        {
            get => am_GetPropertyValue(LegalNameProperty);
            set => am_SetPropertyValue(LegalNameProperty, value);
        }
        public static AB_PropertyMetadata<string> LegalNameProperty = am_CreatePropertyMetaData<string>(nameof(LegalName), DescriptionResource.LEGALNAME, null);

        [Display(Name = "CONTACTLASTNAME", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(50)]
        [DataMember]
        public string ContactLastName //Map Field: YD1CCNLN
        {
            get => am_GetPropertyValue(ContactLastNameProperty);
            set => am_SetPropertyValue(ContactLastNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactLastNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactLastName), DescriptionResource.CONTACTLASTNAME, null);

        [Display(Name = "CONTACTFIRSTNAME", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(50)]
        [DataMember]
        public string ContactFirstName //Map Field: YD1CCNFN
        {
            get => am_GetPropertyValue(ContactFirstNameProperty);
            set => am_SetPropertyValue(ContactFirstNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactFirstNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactFirstName), DescriptionResource.CONTACTFIRSTNAME, null);

        [Display(Name = "CONTACTMIDDLENAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactMiddleName //Map Field: YD1CCNMN
        {
            get => am_GetPropertyValue(ContactMiddleNameProperty);
            set => am_SetPropertyValue(ContactMiddleNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactMiddleNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactMiddleName), DescriptionResource.CONTACTMIDDLENAME, null);

        [Display(Name = "CONTACTNICKNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactNickName //Map Field: YD1CCNNN
        {
            get => am_GetPropertyValue(ContactNickNameProperty);
            set => am_SetPropertyValue(ContactNickNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactNickNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactNickName), DescriptionResource.CONTACTNICKNAME, null);

        [Display(Name = "BILLINGADDRESS1", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(30)]
        [DataMember]
        public string BillingAddress1 //Map Field: YD1CBLA1
        {
            get => am_GetPropertyValue(BillingAddress1Property);
            set => am_SetPropertyValue(BillingAddress1Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress1Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress1), DescriptionResource.BILLINGADDRESS1, null);

        [Display(Name = "BILLINGADDRESS2", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(30)]
        [DataMember]
        public string BillingAddress2 //Map Field: YD1CBLA2
        {
            get => am_GetPropertyValue(BillingAddress2Property);
            set => am_SetPropertyValue(BillingAddress2Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress2Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress2), DescriptionResource.BILLINGADDRESS2, null);

        [Display(Name = "BILLINGADDRESS3", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(30)]
        [DataMember]
        public string BillingAddress3 //Map Field: YD1CBLA3
        {
            get => am_GetPropertyValue(BillingAddress3Property);
            set => am_SetPropertyValue(BillingAddress3Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress3Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress3), DescriptionResource.BILLINGADDRESS3, null);

        [Display(Name = "BILLINGPOSTALCODE", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(10)]
        [DataMember]
        public string BillingPostalCode //Map Field: YD1CBLPC
        {
            get => am_GetPropertyValue(BillingPostalCodeProperty);
            set => am_SetPropertyValue(BillingPostalCodeProperty, value);
        }
        public static AB_PropertyMetadata<string> BillingPostalCodeProperty = am_CreatePropertyMetaData<string>(nameof(BillingPostalCode), DescriptionResource.BILLINGPOSTALCODE, null);

        [Display(Name = "BILLINGCOUNTRY", ResourceType = typeof(DescriptionResource))]
		[AB_RequiredField]
		[AB_Length(50)]
        [DataMember]
        public string BillingCountry //Map Field: YD1CBLCY
        {
            get => am_GetPropertyValue(BillingCountryProperty);
            set => am_SetPropertyValue(BillingCountryProperty, value);
        }
        public static AB_PropertyMetadata<string> BillingCountryProperty = am_CreatePropertyMetaData<string>(nameof(BillingCountry), DescriptionResource.BILLINGCOUNTRY, null);

        [Display(Name = "TELEPHONE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(20)]
        [DataMember]
        public string Telephone //Map Field: YD1CTL
        {
            get => am_GetPropertyValue(TelephoneProperty);
            set => am_SetPropertyValue(TelephoneProperty, value);
        }
        public static AB_PropertyMetadata<string> TelephoneProperty = am_CreatePropertyMetaData<string>(nameof(Telephone), DescriptionResource.TELEPHONE, null);

        [Display(Name = "EMAIL", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_EmailAddress(ap_ValidationTriggers = AB_ValidationTrigger.OnSave | AB_ValidationTrigger.OnLostFocus)]
        public string Email //Map Field: YD1CEM
        {
            get => am_GetPropertyValue(EmailProperty);
            set => am_SetPropertyValue(EmailProperty, value);
        }
        public static AB_PropertyMetadata<string> EmailProperty = am_CreatePropertyMetaData<string>(nameof(Email), DescriptionResource.EMAIL, null);

        [Display(Name = "MEMO", ResourceType = typeof(DescriptionResource))]
        [AB_Length(100)]
        [DataMember]
        public string Memo //Map Field: YD1CM1
        {
            get => am_GetPropertyValue(MemoProperty);
            set => am_SetPropertyValue(MemoProperty, value);
        }
        public static AB_PropertyMetadata<string> MemoProperty = am_CreatePropertyMetaData<string>(nameof(Memo), DescriptionResource.MEMO, null);

        [Display(Name = "PURCHASEPOINTS", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataMember]
        public int? PurchasePoints //Map Field: YD1CPRPT
        {
            get => am_GetPropertyValue(PurchasePointsProperty);
            set => am_SetPropertyValue(PurchasePointsProperty, value);
        }
        public static AB_PropertyMetadata<int?> PurchasePointsProperty = am_CreatePropertyMetaData<int?>(nameof(PurchasePoints), DescriptionResource.PURCHASEPOINTS, null);

		#region Additional Fields

		[Display(Name = "CONTACTFULLNAME", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
		[AB_VirtualMember("ContactFirstName", "ContactMiddleName", "ContactLastName", "ContactNickName")]
		[AB_ReadOnly]
		public string ContactFullName
		{
			get
			{
				var nickname = string.IsNullOrWhiteSpace(ContactNickName) ? null : @"""" + ContactNickName + @"""";
				var array = new[] { ContactFirstName, ContactMiddleName, ContactLastName, nickname };
				string contactFullName = string.Join(" ", array.Where(s => !string.IsNullOrEmpty(s)));

				return contactFullName;
			}
		}
		public static AB_PropertyMetadata<string> ContactFullNameProperty = am_CreatePropertyMetaData<string>("ContactFullName", DescriptionResource.CONTACTFULLNAME, null);

		[Display(Name = "CONTACTFULLNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ContactFullNameSearch
		{
			get => am_GetPropertyValue(ContactFullNameSearchProperty);
			set => am_SetPropertyValue(ContactFullNameSearchProperty, value);
		}
		public static AB_PropertyMetadata<string> ContactFullNameSearchProperty = am_CreatePropertyMetaData<string>(nameof(ContactFullNameSearch), DescriptionResource.CONTACTFULLNAME, null);


		[Display(Name = "BILLINGADDRESSLINE", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
		[AB_VirtualMember("BillingAddress1", "BillingAddress2", "BillingAddress3", "BillingPostalCode", "BillingCountry")]
		[AB_ReadOnly]
		public string BillingAddressLine
		{
			get
			{
				var billingAddressLine = AB_AddressHelper.am_FullAddressLine(addressLine1: BillingAddress1, city: BillingAddress2, state: BillingAddress3, zip: BillingPostalCode, country: BillingCountry);
				return billingAddressLine;
			}
		}
		public static AB_PropertyMetadata<string> BillingAddressLineProperty = am_CreatePropertyMetaData<string>("BillingAddressLine", DescriptionResource.BILLINGADDRESSLINE, null);

		[Display(Name = "BILLINGADDRESSBLOCK", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
		[AB_VirtualMember("BillingAddress1", "BillingAddress2", "BillingAddress3", "BillingPostalCode", "BillingCountry")]
		[AB_ReadOnly]
		public string BillingAddressBlock
		{
			get
			{
				var billingAddressBlock = AB_AddressHelper.am_FullAddressBlock(addressLine1: BillingAddress1, city: BillingAddress2, state: BillingAddress3, zip: BillingPostalCode, country: BillingCountry);
				return billingAddressBlock;
			}
		}
		public static AB_PropertyMetadata<string> BillingAddressBlockProperty = am_CreatePropertyMetaData<string>("BillingAddressBlock", DescriptionResource.BILLINGADDRESSBLOCK, null);

		[Display(Name = "BILLINGADDRESSLINE", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string BillingAddressLineSearch
		{
			get => am_GetPropertyValue(BillingAddressLineSearchProperty);
			set => am_SetPropertyValue(BillingAddressLineSearchProperty, value);
		}
		public static AB_PropertyMetadata<string> BillingAddressLineSearchProperty = am_CreatePropertyMetaData<string>(nameof(BillingAddressLineSearch), DescriptionResource.BILLINGADDRESSLINE, null);

		#endregion

		#region Parent Customer Join

		[Display(Name = "PARENTCUSTOMERNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[AB_BroadcastMember("CustomerName", AB_DataShouldBePassed.OnPreload)]
		[DataMember]
		public string ParentName //Map Field: YD1C.YD1CNM
		{
			get => am_GetPropertyValue(ParentNameProperty);
			set => am_SetPropertyValue(ParentNameProperty, value);
		}
		public static AB_PropertyMetadata<string> ParentNameProperty = am_CreatePropertyMetaData<string>(nameof(ParentName), DescriptionResource.PARENTCUSTOMERNAME, null);

		[Display(Name = "PARENTCUSTOMERCONTACTFULLNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ParentCustomerContactFullName
		{
			get => am_GetPropertyValue(ParentCustomerContactFullNameProperty);
			set => am_SetPropertyValue(ParentCustomerContactFullNameProperty, value);
		}
		public static AB_PropertyMetadata<string> ParentCustomerContactFullNameProperty = am_CreatePropertyMetaData<string>(nameof(ParentCustomerContactFullName), DescriptionResource.PARENTCUSTOMERCONTACTFULLNAME, null);

		[Display(Name = "PARENTCUSTOMERTELEPHONE", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ParentCustomerTelephone
		{
			get => am_GetPropertyValue(ParentCustomerTelephoneProperty);
			set => am_SetPropertyValue(ParentCustomerTelephoneProperty, value);
		}
		public static AB_PropertyMetadata<string> ParentCustomerTelephoneProperty = am_CreatePropertyMetaData<string>(nameof(ParentCustomerTelephone), DescriptionResource.PARENTCUSTOMERTELEPHONE, null);

		[Display(Name = "PARENTCUSTOMERADDRESSLINE", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ParentCustomerAddressLine
		{
			get => am_GetPropertyValue(ParentCustomerAddressLineProperty);
			set => am_SetPropertyValue(ParentCustomerAddressLineProperty, value);
		}
		public static AB_PropertyMetadata<string> ParentCustomerAddressLineProperty = am_CreatePropertyMetaData<string>(nameof(ParentCustomerAddressLine), DescriptionResource.PARENTCUSTOMERADDRESSLINE, null);

		#endregion

		#region Last Order Information

		[Display(Name = "LASTORDERID", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string LastOrderID
		{
			get => am_GetPropertyValue(LastOrderIDProperty);
			set => am_SetPropertyValue(LastOrderIDProperty, value);
		}
		public static AB_PropertyMetadata<string> LastOrderIDProperty = am_CreatePropertyMetaData<string>(nameof(LastOrderID), DescriptionResource.LASTORDERID, null);

		[Display(Name = "LASTORDERDATE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyDateFormat]
		[DataType(DataType.Date)]
		[DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
		[AB_ReadOnly]
		[DataMember]
		public DateTime? LastOrderDate
		{
			get => am_GetPropertyValue(LastOrderDateProperty);
			set => am_SetPropertyValue(LastOrderDateProperty, value);
		}
		public static AB_PropertyMetadata<DateTime?> LastOrderDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastOrderDate), DescriptionResource.LASTORDERDATE, null);

		[Display(Name = "LASTORDERTIME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public TimeSpan? LastOrderTime
		{
			get => am_GetPropertyValue(LastOrderTimeProperty);
			set => am_SetPropertyValue(LastOrderTimeProperty, value);
		}
		public static AB_PropertyMetadata<TimeSpan?> LastOrderTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(LastOrderTime), DescriptionResource.LASTORDERTIME, null);

		[Display(Name = "LASTORDERSTATUS", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string LastOrderStatus
		{
			get => am_GetPropertyValue(LastOrderStatusProperty);
			set => am_SetPropertyValue(LastOrderStatusProperty, value);
		}
		public static AB_PropertyMetadata<string> LastOrderStatusProperty = am_CreatePropertyMetaData<string>(nameof(LastOrderStatus), DescriptionResource.LASTORDERSTATUS, null);

		[Display(Name = "LASTUSEDSHIPPINGADDRESSID", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string LastUsedShippingAddressID
		{
			get => am_GetPropertyValue(LastUsedShippingAddressIDProperty);
			set => am_SetPropertyValue(LastUsedShippingAddressIDProperty, value);
		}
		public static AB_PropertyMetadata<string> LastUsedShippingAddressIDProperty = am_CreatePropertyMetaData<string>(nameof(LastUsedShippingAddressID), DescriptionResource.LASTUSEDSHIPPINGADDRESSID, null);

		[Display(Name = "LASTUSEDSHIPPINGADDRESSNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string LastUsedShippingAddressName
		{
			get => am_GetPropertyValue(LastUsedShippingAddressNameProperty);
			set => am_SetPropertyValue(LastUsedShippingAddressNameProperty, value);
		}
		public static AB_PropertyMetadata<string> LastUsedShippingAddressNameProperty = am_CreatePropertyMetaData<string>(nameof(LastUsedShippingAddressName), DescriptionResource.LASTUSEDSHIPPINGADDRESSNAME, null);

		[Display(Name = "LASTUSEDSHIPPINGADDRESSLINE", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string LastUsedShippingAddressLine
		{
			get => am_GetPropertyValue(LastUsedShippingAddressLineProperty);
			set => am_SetPropertyValue(LastUsedShippingAddressLineProperty, value);
		}
		public static AB_PropertyMetadata<string> LastUsedShippingAddressLineProperty = am_CreatePropertyMetaData<string>(nameof(LastUsedShippingAddressLine), DescriptionResource.LASTUSEDSHIPPINGADDRESSLINE, null);

		#endregion

		#region Sub-Customer Information

		[Display(Name = "ISAPARENTCUSTOMER", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public bool? IsParentCustomer
		{
			get { return am_GetPropertyValue(IsParentCustomerProperty); }
			set { am_SetPropertyValue(IsParentCustomerProperty, value); }
		}
		public static AB_PropertyMetadata<bool?> IsParentCustomerProperty = am_CreatePropertyMetaData<bool?>("IsParentCustomer", DescriptionResource.ISAPARENTCUSTOMER, null);

		[Display(Name = "ISASUBCUSTOMER", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public bool? IsSubCustomer
		{
			get { return am_GetPropertyValue(IsSubCustomerProperty); }
			set { am_SetPropertyValue(IsSubCustomerProperty, value); }
		}
		public static AB_PropertyMetadata<bool?> IsSubCustomerProperty = am_CreatePropertyMetaData<bool?>("IsSubCustomer", DescriptionResource.ISASUBCUSTOMER, null);

		[Display(Name = "SUBCUSTOMERCOUNT", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public int? SubCustomerCount //Map Field: SubCustomerCount
		{
			get { return am_GetPropertyValue(SubCustomerCountProperty); }
			set { am_SetPropertyValue(SubCustomerCountProperty, value); }
		}
		public static AB_PropertyMetadata<int?> SubCustomerCountProperty = am_CreatePropertyMetaData<int?>("SubCustomerCount", DescriptionResource.SUBCUSTOMERCOUNT, null);

		[Display(Name = "SUBCUSTOMERLIST", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public string SubCustomerList //Map Field: SubCustomerList
		{
			get { return am_GetPropertyValue(SubCustomerListProperty); }
			set { am_SetPropertyValue(SubCustomerListProperty, value); }
		}
		public static AB_PropertyMetadata<string> SubCustomerListProperty = am_CreatePropertyMetaData<string>("SubCustomerList", DescriptionResource.SUBCUSTOMERLIST, null);

		#endregion

		#region Shipping Address Information

		[Display(Name = "SHIPPINGADDRESSCOUNT", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public int? ShippingAddressCount //Map Field: SHIPPINGADDRESSCOUNT
		{
			get { return am_GetPropertyValue(ShippingAddressCountProperty); }
			set { am_SetPropertyValue(ShippingAddressCountProperty, value); }
		}
		public static AB_PropertyMetadata<int?> ShippingAddressCountProperty = am_CreatePropertyMetaData<int?>("ShippingAddressCount", DescriptionResource.SHIPPINGADDRESSCOUNT, null);

		[Display(Name = "SHIPPINGADDRESSLIST", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public string ShippingAddressList
		{
			get { return am_GetPropertyValue(ShippingAddressListProperty); }
			set { am_SetPropertyValue(ShippingAddressListProperty, value); }
		}
		public static AB_PropertyMetadata<string> ShippingAddressListProperty = am_CreatePropertyMetaData<string>("ShippingAddressList", DescriptionResource.SHIPPINGADDRESSLIST, null);

		#endregion

		#region Orders Information

		[Display(Name = "FIRSTORDERDATE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyDateFormat]
		[DataType(DataType.Date)]
		[DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [AB_ReadOnly]
		[DataMember]
		public DateTime? FirstOrderDate
		{
			get => am_GetPropertyValue(FirstOrderDateProperty);
			set => am_SetPropertyValue(FirstOrderDateProperty, value);
		}
		public static AB_PropertyMetadata<DateTime?> FirstOrderDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(FirstOrderDate), DescriptionResource.FIRSTORDERDATE, null);

		[Display(Name = "FIRSTORDERTIME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public TimeSpan? FirstOrderTime
		{
			get => am_GetPropertyValue(FirstOrderTimeProperty);
			set => am_SetPropertyValue(FirstOrderTimeProperty, value);
		}
		public static AB_PropertyMetadata<TimeSpan?> FirstOrderTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(FirstOrderTime), DescriptionResource.FIRSTORDERTIME, null);

		[Display(Name = "ORDERCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public int? OrderCount
		{
			get => am_GetPropertyValue(OrderCountProperty);
			set => am_SetPropertyValue(OrderCountProperty, value);
		}
		public static AB_PropertyMetadata<int?> OrderCountProperty = am_CreatePropertyMetaData<int?>(nameof(OrderCount), DescriptionResource.ORDERCOUNT, null);

		[Display(Name = "INCOMPLETEORDERCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public int? IncompleteOrderCount
		{
			get => am_GetPropertyValue(IncompleteOrderCountProperty);
			set => am_SetPropertyValue(IncompleteOrderCountProperty, value);
		}
		public static AB_PropertyMetadata<int?> IncompleteOrderCountProperty = am_CreatePropertyMetaData<int?>(nameof(IncompleteOrderCount), DescriptionResource.INCOMPLETEORDERCOUNT, null);

		[Display(Name = "DISCOUNTEDORDERCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public int? DiscountedOrderCount
		{
			get => am_GetPropertyValue(DiscountedOrderCountProperty);
			set => am_SetPropertyValue(DiscountedOrderCountProperty, value);
		}
		public static AB_PropertyMetadata<int?> DiscountedOrderCountProperty = am_CreatePropertyMetaData<int?>(nameof(DiscountedOrderCount), DescriptionResource.DISCOUNTEDORDERCOUNT, null);

		[Display(Name = "HIGHESTORDERSUBTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? HighestOrderSubtotal
		{
			get => am_GetPropertyValue(HighestOrderSubtotalProperty);
			set => am_SetPropertyValue(HighestOrderSubtotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> HighestOrderSubtotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(HighestOrderSubtotal), DescriptionResource.HIGHESTORDERSUBTOTAL, null);

		[Display(Name = "HIGHESTDISCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("P")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? HighestDiscount
		{
			get => am_GetPropertyValue(HighestDiscountProperty);
			set => am_SetPropertyValue(HighestDiscountProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> HighestDiscountProperty = am_CreatePropertyMetaData<decimal?>(nameof(HighestDiscount), DescriptionResource.HIGHESTDISCOUNT, null);

		[Display(Name = "HIGHESTORDERTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? HighestOrderTotal
		{
			get => am_GetPropertyValue(HighestOrderTotalProperty);
			set => am_SetPropertyValue(HighestOrderTotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> HighestOrderTotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(HighestOrderTotal), DescriptionResource.HIGHESTORDERTOTAL, null);

		[Display(Name = "AVERAGEORDERSUBTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? AverageOrderSubtotal
		{
			get => am_GetPropertyValue(AverageOrderSubtotalProperty);
			set => am_SetPropertyValue(AverageOrderSubtotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> AverageOrderSubtotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(AverageOrderSubtotal), DescriptionResource.AVERAGEORDERSUBTOTAL, null);

		[Display(Name = "AVERAGEDISCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("P")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? AverageDiscount
		{
			get => am_GetPropertyValue(AverageDiscountProperty);
			set => am_SetPropertyValue(AverageDiscountProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> AverageDiscountProperty = am_CreatePropertyMetaData<decimal?>(nameof(AverageDiscount), DescriptionResource.AVERAGEDISCOUNT, null);

		[Display(Name = "AVERAGEORDERTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? AverageOrderTotal
		{
			get => am_GetPropertyValue(AverageOrderTotalProperty);
			set => am_SetPropertyValue(AverageOrderTotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> AverageOrderTotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(AverageOrderTotal), DescriptionResource.AVERAGEORDERTOTAL, null);

		[Display(Name = "LOWESTORDERSUBTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? LowestOrderSubtotal
		{
			get => am_GetPropertyValue(LowestOrderSubtotalProperty);
			set => am_SetPropertyValue(LowestOrderSubtotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> LowestOrderSubtotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(LowestOrderSubtotal), DescriptionResource.LOWESTORDERSUBTOTAL, null);

		[Display(Name = "LOWESTDISCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("P")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? LowestDiscount
		{
			get => am_GetPropertyValue(LowestDiscountProperty);
			set => am_SetPropertyValue(LowestDiscountProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> LowestDiscountProperty = am_CreatePropertyMetaData<decimal?>(nameof(LowestDiscount), DescriptionResource.LOWESTDISCOUNT, null);

		[Display(Name = "LOWESTORDERTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? LowestOrderTotal
		{
			get => am_GetPropertyValue(LowestOrderTotalProperty);
			set => am_SetPropertyValue(LowestOrderTotalProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> LowestOrderTotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(LowestOrderTotal), DescriptionResource.LOWESTORDERTOTAL, null);

		#endregion

		#region Order Products Information

		[Display(Name = "ORDEREDITEMSCOUNT", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public int? OrderedItemsCount
		{
			get { return am_GetPropertyValue(OrderedItemsCountProperty); }
			set { am_SetPropertyValue(OrderedItemsCountProperty, value); }
		}
		public static AB_PropertyMetadata<int?> OrderedItemsCountProperty = am_CreatePropertyMetaData<int?>("OrderedItemsCount", DescriptionResource.ORDEREDITEMSCOUNT, null);

		[Display(Name = "PRODUCTSORDEREDCOUNT", ResourceType = typeof(DescriptionResource))]
		[DataMember]
		[AB_ReadOnly]
		public int? ProductsOrderedCount
		{
			get { return am_GetPropertyValue(ProductsOrderedCountProperty); }
			set { am_SetPropertyValue(ProductsOrderedCountProperty, value); }
		}
		public static AB_PropertyMetadata<int?> ProductsOrderedCountProperty = am_CreatePropertyMetaData<int?>("ProductsOrderedCount", DescriptionResource.PRODUCTSORDEREDCOUNT, null);

		#endregion

		#region Audit Stamps

		[Display(Name = "CREATEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [DataMember]
        public DateTime? CreateDate //Map Field: YD1CCRDT
        {
            get => am_GetPropertyValue(CreateDateProperty);
            set => am_SetPropertyValue(CreateDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> CreateDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDate), DescriptionResource.CREATEDATE, null);

        [Display(Name = "CREATETIME", ResourceType = typeof(DescriptionResource))]
        [AB_CreateTime]
        [DataMember]
        public TimeSpan? CreateTime //Map Field: YD1CCRTM
        {
            get => am_GetPropertyValue(CreateTimeProperty);
            set => am_SetPropertyValue(CreateTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> CreateTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(CreateTime), DescriptionResource.CREATETIME, null);

        [Display(Name = "CREATEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_CreateUser]
        [DataMember]
        public string CreateUser //Map Field: YD1CCRUS
        {
            get => am_GetPropertyValue(CreateUserProperty);
            set => am_SetPropertyValue(CreateUserProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateUserProperty = am_CreatePropertyMetaData<string>(nameof(CreateUser), DescriptionResource.CREATEUSER, null);

        [Display(Name = "CREATEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string CreateJob //Map Field: YD1CCRJB
        {
            get => am_GetPropertyValue(CreateJobProperty);
            set => am_SetPropertyValue(CreateJobProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobProperty = am_CreatePropertyMetaData<string>(nameof(CreateJob), DescriptionResource.CREATEJOB, null);

        [Display(Name = "CREATEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string CreateJobNumber //Map Field: YD1CCRJN
        {
            get => am_GetPropertyValue(CreateJobNumberProperty);
            set => am_SetPropertyValue(CreateJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(CreateJobNumber), DescriptionResource.CREATEJOBNUMBER, null);

        [Display(Name = "LASTCHANGEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [AB_LastChangeDate]
        [DataMember]
        public DateTime? LastChangeDate //Map Field: YD1CLCDT
        {
            get => am_GetPropertyValue(LastChangeDateProperty);
            set => am_SetPropertyValue(LastChangeDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> LastChangeDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDate), DescriptionResource.LASTCHANGEDATE, null);

        [Display(Name = "LASTCHANGETIME", ResourceType = typeof(DescriptionResource))]
        [AB_LastChangeTime]
        [DataMember]
        public TimeSpan? LastChangeTime //Map Field: YD1CLCTM
        {
            get => am_GetPropertyValue(LastChangeTimeProperty);
            set => am_SetPropertyValue(LastChangeTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> LastChangeTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(LastChangeTime), DescriptionResource.LASTCHANGETIME, null);

        [Display(Name = "LASTCHANGEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_LastChangeUser]
        [DataMember]
        public string LastChangeUser //Map Field: YD1CLCUS
        {
            get => am_GetPropertyValue(LastChangeUserProperty);
            set => am_SetPropertyValue(LastChangeUserProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeUserProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeUser), DescriptionResource.LASTCHANGEUSER, null);

        [Display(Name = "LASTCHANGEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string LastChangeJob //Map Field: YD1CLCJB
        {
            get => am_GetPropertyValue(LastChangeJobProperty);
            set => am_SetPropertyValue(LastChangeJobProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJob), DescriptionResource.LASTCHANGEJOB, null);

        [Display(Name = "LASTCHANGEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string LastChangeJobNumber //Map Field: YD1CLCJN
        {
            get => am_GetPropertyValue(LastChangeJobNumberProperty);
            set => am_SetPropertyValue(LastChangeJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJobNumber), DescriptionResource.LASTCHANGEJOBNUMBER, null);

		#endregion

		[DataMember]
		public bool IsDropdownFetch
		{
			get => am_GetPropertyValue(IsDropdownFetchProperty);
			set => am_SetPropertyValue(IsDropdownFetchProperty, value);
		}
		public static AB_PropertyMetadata<bool> IsDropdownFetchProperty = am_CreatePropertyMetaData<bool>(nameof(IsDropdownFetch), "IsDropDownFetch", false);

		#endregion //Properties

		#region Property Overrides

		// Title
		public override string ap_Title
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_Title))
                {
                    StringBuilder title = new StringBuilder();
                    switch (ap_TitleMode)
                    {
                        case AB_TitleMode.New:
                        case AB_TitleMode.NewFor:
                        case AB_TitleMode.Copy:
                            title.AppendFormat("{0}", MessageResource.TITLENEW);
                            break;
                        case AB_TitleMode.Display:
                            title.AppendFormat("{0}", MessageResource.TITLEDISPLAY);
                            break;
                        case AB_TitleMode.Open:
                            title.AppendFormat("{0}", MessageResource.TITLEOPEN);
                            break;
                        case AB_TitleMode.Subbrowser:
                            title.AppendFormat("{0}", MessageResource.TITLESUBBROWSER);
                            break;
                        case AB_TitleMode.Default:
                            title.AppendFormat("{0} ", MessageResource.TITLEOPEN);
                            break;
                    }
 
                    if (!string.IsNullOrWhiteSpace(ContactFirstName))
                    {
                        title.AppendFormat(" - {0}", ContactFirstName);
                    }
 
                    if (!string.IsNullOrWhiteSpace(ContactLastName))
                    {
                        title.AppendFormat(" - {0}", ContactLastName);
                    }
 
                    if (!string.IsNullOrWhiteSpace(Name))
                    {
                        title.AppendFormat(" - {0}", Name);
                    }
  
                    return title.ToString();
                }
                return base.ap_Title;
            }
            set
            {
                base.ap_Title = value;
            }
        }

        // Message Field
        public override string ap_MessageField
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_MessageField))
                {
                    return "\"" + ap_Title + "\"";
                }

                return base.ap_MessageField;
            }
            set
            {
                base.ap_MessageField = value;
            }
        }

        // Unique Name
        public override string ap_UniqueName
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_UniqueName))
                {
                    return "Customer - ";
                }

                return base.ap_UniqueName;
            }
            set
            {
                base.ap_UniqueName = value;
            }
        }

        #endregion //Property Overrides
        /// <summary>
        /// Static constructor
        /// </summary>
        static CustomerEntity()
        {
            RG_DoStaticInit();
        }


    }
}