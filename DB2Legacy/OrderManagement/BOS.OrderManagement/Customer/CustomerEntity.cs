//===============================================================================================
// <A4DN_GeneratedInformation>
// This code was generated using the Accelerator for .Net Code Generator.
// <A4DN_Template Name="BOS.Module.Entity.t4" Version="8.0.0.93" GeneratedDate="5/29/2024" />
// </A4DN_GeneratedInformation>
//===============================================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using A4DN.Core.BOS.Base;
using BOS.OrderManagement.Shared.Properties;
#if !SILVERLIGHT
using A4DN.Core.BOS.ValidationAttributes;  // Custom validation attributes
#endif

namespace BOS.CustomerDataEntity
{
    /// <summary>
    /// Represents data. Contains metadata that facilitates validation and advanced databinding.
    /// </summary>
    [DataContract]
    public class CustomerEntity : AB_BusinessObjectEntityBase
    {
        /// <summary>
        /// Entity information is defined in the lower level entity to maximize performance by making it static
        /// </summary>
        private static AB_EntityInfo _EntityInfo;
        /// <summary>
        /// Gets metadata information about the entity
        /// </summary>
        public override AB_EntityInfo ap_EntityInfo
        {
            get => _EntityInfo;
        }

        /// <summary>
        /// Initializes static members
        /// </summary>
        static private void RG_DoStaticInit()
        {
            // Set Message and Description Primary and Secondary Resources. 
            AB_BusinessObjectEntityBase.am_GetPropertyInfo(typeof(CustomerEntity), typeof(BOS.OrderManagement.Properties.MessageResource), typeof(MessageResource), typeof(BOS.OrderManagement.Properties.DescriptionResource), typeof(DescriptionResource), out _EntityInfo); 
        }

        #region Properties

        [AB_Key(ap_IsAutoGenerated=true)] 
        [AB_DoNotCopy]
        [Display(Name = "CUSTOMERINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [AB_AutoIncrement]
        [DataMember]
        public int? CustomerInternalID //Map Field: YD1CIID
        {
            get => am_GetPropertyValue(CustomerInternalIDProperty);
            set => am_SetPropertyValue(CustomerInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> CustomerInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(CustomerInternalID), DescriptionResource.CUSTOMERINTERNALID, null); 

        [AB_ReceivedBroadcastDataMember("CustomerInternalID")]
        [Display(Name = "PARENTINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataMember]
        public int? ParentInternalID //Map Field: YD1CPTID
        {
            get => am_GetPropertyValue(ParentInternalIDProperty);
            set => am_SetPropertyValue(ParentInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> ParentInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(ParentInternalID), DescriptionResource.PARENTINTERNALID, null); 

        [Display(Name = "PARENTRELATIONSHIP", ResourceType = typeof(DescriptionResource))]
        [AB_Length(20)]
        [DataMember]
        [AB_ValidationMethod(typeof(ValidateParentRelationship), "Invalid Parent Relationship")]
        public string ParentRelationship //Map Field: YD1CPTRL
        {
            get => am_GetPropertyValue(ParentRelationshipProperty);
            set => am_SetPropertyValue(ParentRelationshipProperty, value);
        }
        public static AB_PropertyMetadata<string> ParentRelationshipProperty = am_CreatePropertyMetaData<string>(nameof(ParentRelationship), DescriptionResource.PARENTRELATIONSHIP, null); 

        [Display(Name = "NAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [AB_BroadcastMember("CustomerName", AB_DataShouldBePassed.OnPreload)]
        [DataMember]
        public string Name //Map Field: YD1CNM
        {
            get => am_GetPropertyValue(NameProperty);
            set => am_SetPropertyValue(NameProperty, value);
        }
        public static AB_PropertyMetadata<string> NameProperty = am_CreatePropertyMetaData<string>(nameof(Name), DescriptionResource.NAME, null); 

        [Display(Name = "LEGALNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_RequiredField]
        public string LegalName //Map Field: YD1CNMLG
        {
            get => am_GetPropertyValue(LegalNameProperty);
            set => am_SetPropertyValue(LegalNameProperty, value);
        }
        public static AB_PropertyMetadata<string> LegalNameProperty = am_CreatePropertyMetaData<string>(nameof(LegalName), DescriptionResource.LEGALNAME, null); 

        [Display(Name = "CONTACTLASTNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactLastName //Map Field: YD1CCNLN
        {
            get => am_GetPropertyValue(ContactLastNameProperty);
            set => am_SetPropertyValue(ContactLastNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactLastNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactLastName), DescriptionResource.CONTACTLASTNAME, null); 

        [Display(Name = "CONTACTFIRSTNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactFirstName //Map Field: YD1CCNFN
        {
            get => am_GetPropertyValue(ContactFirstNameProperty);
            set => am_SetPropertyValue(ContactFirstNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactFirstNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactFirstName), DescriptionResource.CONTACTFIRSTNAME, null); 

        [Display(Name = "CONTACTMIDDLENAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactMiddleName //Map Field: YD1CCNMN
        {
            get => am_GetPropertyValue(ContactMiddleNameProperty);
            set => am_SetPropertyValue(ContactMiddleNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactMiddleNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactMiddleName), DescriptionResource.CONTACTMIDDLENAME, null); 

        [Display(Name = "CONTACTNICKNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_RequiredField]
        public string ContactNickName //Map Field: YD1CCNNN
        {
            get => am_GetPropertyValue(ContactNickNameProperty);
            set => am_SetPropertyValue(ContactNickNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactNickNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactNickName), DescriptionResource.CONTACTNICKNAME, null);

        [Display(Name = "CONTACTFULLNAME", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("ContactFirstName", "ContactMiddleName", "ContactLastName")]
        public string ContactFullName
        {
            get
            {
                var array = new[] { ContactFirstName, ContactMiddleName, ContactLastName };
                string contactFullName = string.Join(" ", array.Where(s => !string.IsNullOrEmpty(s)));

                return contactFullName;
            }
        }
        public static AB_PropertyMetadata<string> ContactFullNameProperty = am_CreatePropertyMetaData<string>("ContactFullName", DescriptionResource.CONTACTFULLNAME, null);

        [Display(Name = "BILLINGADDRESS1", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        public string BillingAddress1 //Map Field: YD1CBLA1
        {
            get => am_GetPropertyValue(BillingAddress1Property);
            set => am_SetPropertyValue(BillingAddress1Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress1Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress1), DescriptionResource.BILLINGADDRESS1, null); 

        [Display(Name = "BILLINGADDRESS2", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        [AB_RequiredField]
        public string BillingAddress2 //Map Field: YD1CBLA2
        {
            get => am_GetPropertyValue(BillingAddress2Property);
            set => am_SetPropertyValue(BillingAddress2Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress2Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress2), DescriptionResource.BILLINGADDRESS2, null); 

        [Display(Name = "BILLINGADDRESS3", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        public string BillingAddress3 //Map Field: YD1CBLA3
        {
            get => am_GetPropertyValue(BillingAddress3Property);
            set => am_SetPropertyValue(BillingAddress3Property, value);
        }
        public static AB_PropertyMetadata<string> BillingAddress3Property = am_CreatePropertyMetaData<string>(nameof(BillingAddress3), DescriptionResource.BILLINGADDRESS3, null); 

        [Display(Name = "BILLINGPOSTALCODE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string BillingPostalCode //Map Field: YD1CBLPC
        {
            get => am_GetPropertyValue(BillingPostalCodeProperty);
            set => am_SetPropertyValue(BillingPostalCodeProperty, value);
        }
        public static AB_PropertyMetadata<string> BillingPostalCodeProperty = am_CreatePropertyMetaData<string>(nameof(BillingPostalCode), DescriptionResource.BILLINGPOSTALCODE, null); 

        [Display(Name = "BILLINGCOUNTRY", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string BillingCountry //Map Field: YD1CBLCY
        {
            get => am_GetPropertyValue(BillingCountryProperty);
            set => am_SetPropertyValue(BillingCountryProperty, value);
        }
        public static AB_PropertyMetadata<string> BillingCountryProperty = am_CreatePropertyMetaData<string>(nameof(BillingCountry), DescriptionResource.BILLINGCOUNTRY, null); 

        [Display(Name = "TELEPHONE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(20)]
        [DataMember]
        public string Telephone //Map Field: YD1CTL
        {
            get => am_GetPropertyValue(TelephoneProperty);
            set => am_SetPropertyValue(TelephoneProperty, value);
        }
        public static AB_PropertyMetadata<string> TelephoneProperty = am_CreatePropertyMetaData<string>(nameof(Telephone), DescriptionResource.TELEPHONE, null); 

        [Display(Name = "EMAIL", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_EmailAddress(ap_ValidationTriggers = AB_ValidationTrigger.OnSave | AB_ValidationTrigger.OnLostFocus)]
        public string Email //Map Field: YD1CEM
        {
            get => am_GetPropertyValue(EmailProperty);
            set => am_SetPropertyValue(EmailProperty, value);
        }
        public static AB_PropertyMetadata<string> EmailProperty = am_CreatePropertyMetaData<string>(nameof(Email), DescriptionResource.EMAIL, null); 

        [Display(Name = "MEMO", ResourceType = typeof(DescriptionResource))]
        [AB_Length(100)]
        [DataMember]
        public string Memo //Map Field: YD1CM1
        {
            get => am_GetPropertyValue(MemoProperty);
            set => am_SetPropertyValue(MemoProperty, value);
        }
        public static AB_PropertyMetadata<string> MemoProperty = am_CreatePropertyMetaData<string>(nameof(Memo), DescriptionResource.MEMO, null); 

        [Display(Name = "PURCHASEPOINTS", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataMember]
        public int? PurchasePoints //Map Field: YD1CPRPT
        {
            get => am_GetPropertyValue(PurchasePointsProperty);
            set => am_SetPropertyValue(PurchasePointsProperty, value);
        }
        public static AB_PropertyMetadata<int?> PurchasePointsProperty = am_CreatePropertyMetaData<int?>(nameof(PurchasePoints), DescriptionResource.PURCHASEPOINTS, null); 

        [Display(Name = "CREATEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [AB_CreateDate]
        [DataMember]
        public DateTime? CreateDate //Map Field: YD1CCRDT
        {
            get => am_GetPropertyValue(CreateDateProperty);
            set => am_SetPropertyValue(CreateDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> CreateDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDate), DescriptionResource.CREATEDATE, null); 

        [Display(Name = "CREATETIME", ResourceType = typeof(DescriptionResource))]
        [AB_CreateTime]
        [DataMember]
        public TimeSpan? CreateTime //Map Field: YD1CCRTM
        {
            get => am_GetPropertyValue(CreateTimeProperty);
            set => am_SetPropertyValue(CreateTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> CreateTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(CreateTime), DescriptionResource.CREATETIME, null); 

        [Display(Name = "CREATEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_CreateUser]
        [DataMember]
        public string CreateUser //Map Field: YD1CCRUS
        {
            get => am_GetPropertyValue(CreateUserProperty);
            set => am_SetPropertyValue(CreateUserProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateUserProperty = am_CreatePropertyMetaData<string>(nameof(CreateUser), DescriptionResource.CREATEUSER, null); 

        [Display(Name = "CREATEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string CreateJob //Map Field: YD1CCRJB
        {
            get => am_GetPropertyValue(CreateJobProperty);
            set => am_SetPropertyValue(CreateJobProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobProperty = am_CreatePropertyMetaData<string>(nameof(CreateJob), DescriptionResource.CREATEJOB, null); 

        [Display(Name = "CREATEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string CreateJobNumber //Map Field: YD1CCRJN
        {
            get => am_GetPropertyValue(CreateJobNumberProperty);
            set => am_SetPropertyValue(CreateJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(CreateJobNumber), DescriptionResource.CREATEJOBNUMBER, null); 

        [Display(Name = "LASTCHANGEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [AB_LastChangeDate]
        [DataMember]
        public DateTime? LastChangeDate //Map Field: YD1CLCDT
        {
            get => am_GetPropertyValue(LastChangeDateProperty);
            set => am_SetPropertyValue(LastChangeDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> LastChangeDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDate), DescriptionResource.LASTCHANGEDATE, null); 

        [Display(Name = "LASTCHANGETIME", ResourceType = typeof(DescriptionResource))]
        [AB_LastChangeTime]
        [DataMember]
        public TimeSpan? LastChangeTime //Map Field: YD1CLCTM
        {
            get => am_GetPropertyValue(LastChangeTimeProperty);
            set => am_SetPropertyValue(LastChangeTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> LastChangeTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(LastChangeTime), DescriptionResource.LASTCHANGETIME, null); 

        [Display(Name = "LASTCHANGEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_LastChangeUser]
        [DataMember]
        public string LastChangeUser //Map Field: YD1CLCUS
        {
            get => am_GetPropertyValue(LastChangeUserProperty);
            set => am_SetPropertyValue(LastChangeUserProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeUserProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeUser), DescriptionResource.LASTCHANGEUSER, null); 

        [Display(Name = "LASTCHANGEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string LastChangeJob //Map Field: YD1CLCJB
        {
            get => am_GetPropertyValue(LastChangeJobProperty);
            set => am_SetPropertyValue(LastChangeJobProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJob), DescriptionResource.LASTCHANGEJOB, null); 

        [Display(Name = "LASTCHANGEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string LastChangeJobNumber //Map Field: YD1CLCJN
        {
            get => am_GetPropertyValue(LastChangeJobNumberProperty);
            set => am_SetPropertyValue(LastChangeJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJobNumber), DescriptionResource.LASTCHANGEJOBNUMBER, null); 

        [AB_DropdownDisplay("~/Views/Customer/_CustomerDropdown.cshtml", new string[] { "Source: CustomerInternalID ,Target: ParentInternalID" }, ap_ShowNewButton = true, ap_ShowOpenButton = true, ap_ShowSearchButton = true)]
        [Display(Name = "PARENTNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [AB_BroadcastMember("CustomerName", AB_DataShouldBePassed.OnPreload)]
        [DataMember]
        public string ParentName //Map Field: YD1C.YD1CNM
        {
            get => am_GetPropertyValue(ParentNameProperty);
            set => am_SetPropertyValue(ParentNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ParentNameProperty = am_CreatePropertyMetaData<string>(nameof(ParentName), DescriptionResource.PARENTNAME, null);

        [Display(Name = "BILLINGADDRESS", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("BillingAddress1", "BillingAddress2", "BillingAddress3", "BillingPostalCode", "BillingCountry")]
        public string BillingAddressLine
        {
            get
            {
                var billingAddressLine = AB_AddressHelper.am_FullAddressLine(addressLine1: BillingAddress1, city: BillingAddress2, state: BillingAddress3, zip: BillingPostalCode, country: BillingCountry);
                return billingAddressLine;
            }
        }
        public static AB_PropertyMetadata<string> BillingAddressLineProperty = am_CreatePropertyMetaData<string>("BillingAddressLine", DescriptionResource.BILLINGADDRESS, null);

        [Display(Name = "BILLINGADDRESS", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("BillingAddress1", "BillingAddress2", "BillingAddress3", "BillingPostalCode", "BillingCountry")]
        public string BillingAddressBlock
        {
            get
            {
                var billingAddressBlock = AB_AddressHelper.am_FullAddressBlock(addressLine1: BillingAddress1, city: BillingAddress2, state: BillingAddress3, zip: BillingPostalCode, country: BillingCountry);
                return billingAddressBlock;
            }
        }
        public static AB_PropertyMetadata<string> BillingAddressBlockProperty = am_CreatePropertyMetaData<string>("BillingAddressBlock", DescriptionResource.BILLINGADDRESS, null);

        [Display(Name = "ISASUBCUSTOMER", ResourceType = typeof(DescriptionResource))]
        [AB_VirtualMember("ParentInternalID")]
        [AB_ReadOnly]
        public bool? IsASubCustomer //Map Field: Is A Sub Customer
        {
            get
            {
                if (ap_RecordMode == AB_RecordMode.SearchInput) return null;

                if ((ParentInternalID == 0) || (ParentInternalID == null)) return false;

                return true;
            }
            set
            {

            }
        }
        public static AB_PropertyMetadata<bool?> IsASubCustomerProperty = am_CreatePropertyMetaData<bool?>("IsASubCustomer", DescriptionResource.ISASUBCUSTOMER, null);

        [DataMember]
        public bool? SearchIsSubCustomer
        {
            get { return am_GetPropertyValue(SearchIsSubCustomerProperty); }
            set { am_SetPropertyValue(SearchIsSubCustomerProperty, value); }
        }
        public static AB_PropertyMetadata<bool?> SearchIsSubCustomerProperty = am_CreatePropertyMetaData<bool?>("SearchIsSubCustomer", DescriptionResource.ISASUBCUSTOMER, null);

		#endregion //Properties

                if ((ParentInternalID == 0) || (ParentInternalID == null)) return false;

                return true;
            }
            set
            {

            }
        }
        public static AB_PropertyMetadata<bool?> IsASubCustomerProperty = am_CreatePropertyMetaData<bool?>("IsASubCustomer", DescriptionResource.ISASUBCUSTOMER, null);

        [DataMember]
        public bool? SearchIsSubCustomer
        {
            get { return am_GetPropertyValue(SearchIsSubCustomerProperty); }
            set { am_SetPropertyValue(SearchIsSubCustomerProperty, value); }
        }
        public static AB_PropertyMetadata<bool?> SearchIsSubCustomerProperty = am_CreatePropertyMetaData<bool?>("SearchIsSubCustomer", DescriptionResource.ISASUBCUSTOMER, null);

        [Display(Name = "ISSUBCUSTOMER", ResourceType = typeof(DescriptionResource))]
        [AB_VirtualMember("ParentInternalID")]
        [AB_ReadOnly]
        public bool? IsSubCustomer
        {
            get
            {
                if (ap_RecordMode == AB_RecordMode.SearchInput) return null;

                if (ParentInternalID == 0 || ParentInternalID == null)
                {
                    return false;
                }

                return true;
            }
        }
        public static AB_PropertyMetadata<bool?> IsSubCustomerProperty = am_CreatePropertyMetaData<bool?>("IsSubCustomer", DescriptionResource.ISSUBCUSTOMER, null);

        [Display(Name = "SUBCUSTOMERCOUNT", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        [AB_Length(9)]
        [AB_ReadOnly]
        public int? SubCustomerCount //Map Field: SubCustomerCount
        {
            get { return am_GetPropertyValue(SubCustomerCountProperty); }
            set { am_SetPropertyValue(SubCustomerCountProperty, value); }

        }
        public static AB_PropertyMetadata<int?> SubCustomerCountProperty = am_CreatePropertyMetaData<int?>("SubCustomerCount", DescriptionResource.SUBCUSTOMERCOUNT, null);

        [Display(Name = "SUBCUSTOMERLIST", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        [AB_ReadOnly]
        public string SubCustomerList //Map Field: SubCustomerList
        {
            get { return am_GetPropertyValue(SubCustomerListProperty); }
            set { am_SetPropertyValue(SubCustomerListProperty, value); }
        }
        public static AB_PropertyMetadata<string> SubCustomerListProperty = am_CreatePropertyMetaData<string>("SubCustomerList", DescriptionResource.SUBCUSTOMERLIST, null);

        [Display(Name = "ISPARENTCUSTOMER", ResourceType = typeof(DescriptionResource))]
        [AB_VirtualMember("SubCustomerCount")]
        [AB_Length(1)]
        [AB_ReadOnly]
        public bool? IsParentCustomer //Map Field: Is Parent Customer
        {
            get
            {
                if (ap_RecordMode == AB_RecordMode.SearchInput) return null;

                if (am_GetPropertyValue(SubCustomerCountProperty) == 0 || am_GetPropertyValue(SubCustomerCountProperty) == null)
                {
                    return false;
                }

                return true;
            }
        }
        public static AB_PropertyMetadata<bool?> IsParentCustomerProperty = am_CreatePropertyMetaData<bool?>("IsParentCustomer", DescriptionResource.ISPARENTCUSTOMER, false);

        [Display(Name = "SHIPPINGADDRESSCOUNT", ResourceType = typeof(DescriptionResource))]
        [AB_Length(9)]
        [DataMember]
        [AB_ReadOnly]
        public int? ShippingAddressCount //Map Field: SHIPPINGADDRESSCOUNT
        {
            get { return am_GetPropertyValue(ShippingAddressCountProperty); }
            set { am_SetPropertyValue(ShippingAddressCountProperty, value); }
        }
        public static AB_PropertyMetadata<int?> ShippingAddressCountProperty = am_CreatePropertyMetaData<int?>("ShippingAddressCount", DescriptionResource.SHIPPINGADDRESSCOUNT, null);

        [Display(Name = "ORDERCOUNT", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        [AB_ReadOnly]
        public int? OrderCount //Map Field: ORDERCOUNT
        {
            get { return am_GetPropertyValue(OrderCountProperty); }
            set { am_SetPropertyValue(OrderCountProperty, value); }

        }
        public static AB_PropertyMetadata<int?> OrderCountProperty = am_CreatePropertyMetaData<int?>("OrderCount", DescriptionResource.ORDERCOUNT, null);

        [Display(Name = "AVERAGEORDERSUBTOTAL", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyStringFormat("C")]
        [DataMember]
        [AB_ReadOnly]
        public int? AverageOrderSubtotal //Map Field: AVERAGEORDERSUBTOTAL
        {
            get { return am_GetPropertyValue(AverageOrderSubtotalProperty); }
            set { am_SetPropertyValue(AverageOrderSubtotalProperty, value); }

        }
        public static AB_PropertyMetadata<int?> AverageOrderSubtotalProperty = am_CreatePropertyMetaData<int?>("AverageOrderSubtotal", DescriptionResource.AVERAGEORDERSUBTOTAL, null);


        [Display(Name = "AVERAGEORDERDISCOUNT", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyStringFormat("C")]
        [DataMember]
        [AB_ReadOnly]
        public int? AverageOrderDiscount //Map Field: AVERAGEORDERDISCOUNT
        {
            get { return am_GetPropertyValue(AverageOrderDiscountProperty); }
            set { am_SetPropertyValue(AverageOrderDiscountProperty, value); }

        }
        public static AB_PropertyMetadata<int?> AverageOrderDiscountProperty = am_CreatePropertyMetaData<int?>("AverageOrderDiscount", DescriptionResource.AVERAGEORDERDISCOUNT, null);

        [Display(Name = "AVERAGEORDERTOTAL", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyStringFormat("C")]
        [DataMember]
        [AB_ReadOnly]
        public int? AverageOrderTotal //Map Field: AVERAGEORDERSUBTOTAL
        {
            get { return am_GetPropertyValue(AverageOrderTotalProperty); }
            set { am_SetPropertyValue(AverageOrderTotalProperty, value); }

        }
        public static AB_PropertyMetadata<int?> AverageOrderTotalProperty = am_CreatePropertyMetaData<int?>("AverageOrderTotal", DescriptionResource.AVERAGEORDERTOTAL, null);

        #endregion //Properties

        #region Property Overrides

        // Title
        public override string ap_Title
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_Title))
                {
                    StringBuilder title = new StringBuilder();
                    switch (ap_TitleMode)
                    {
                        case AB_TitleMode.New:
                        case AB_TitleMode.NewFor:
                        case AB_TitleMode.Copy:
                            title.AppendFormat("{0}", MessageResource.TITLENEW);
                            break;
                        case AB_TitleMode.Display:
                            title.AppendFormat("{0}", MessageResource.TITLEDISPLAY);
                            break;
                        case AB_TitleMode.Open:
                            title.AppendFormat("{0}", MessageResource.TITLEOPEN);
                            break;
                        case AB_TitleMode.Subbrowser:
                            title.AppendFormat("{0}", MessageResource.TITLESUBBROWSER);
                            break;
                        case AB_TitleMode.Default:
                            title.AppendFormat("{0} ", MessageResource.TITLEOPEN);
                            break;
                    }
 
                    if (!string.IsNullOrWhiteSpace(ContactFirstName))
                    {
                        title.AppendFormat(" - {0}", ContactFirstName);
                    }
 
                    if (!string.IsNullOrWhiteSpace(ContactLastName))
                    {
                        title.AppendFormat(" - {0}", ContactLastName);
                    }
 
                    if (!string.IsNullOrWhiteSpace(Name))
                    {
                        title.AppendFormat(" - {0}", Name);
                    }
  
                    return title.ToString();
                }
                return base.ap_Title;
            }
            set
            {
                base.ap_Title = value;
            }
        }

        // Message Field
        public override string ap_MessageField
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_MessageField))
                {
                    return "\"" + ap_Title + "\"";
                }

                return base.ap_MessageField;
            }
            set
            {
                base.ap_MessageField = value;
            }
        }

        // Unique Name
        public override string ap_UniqueName
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_UniqueName))
                {
                    return "Customer - ";
                }

                return base.ap_UniqueName;
            }
            set
            {
                base.ap_UniqueName = value;
            }
        }

        #endregion //Property Overrides
        /// <summary>
        /// Static constructor
        /// </summary>
        static CustomerEntity()
        {
            RG_DoStaticInit();
        }


    }
}