//===============================================================================================
// <A4DN_GeneratedInformation>
// This code was generated using the Accelerator for .Net Code Generator.
// <A4DN_Template Name="BOS.Module.Entity.t4" Version="8.0.0.93" GeneratedDate="5/29/2024" />
// </A4DN_GeneratedInformation>
//===============================================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using A4DN.Core.BOS.Base;
using BOS.OrderManagement.Shared.Properties;
#if !SILVERLIGHT
using A4DN.Core.BOS.ValidationAttributes;  // Custom validation attributes
#endif

namespace BOS.ShippingAddressDataEntity
{
    /// <summary>
    /// Represents data. Contains metadata that facilitates validation and advanced databinding.
    /// </summary>
    [DataContract]
    public class ShippingAddressEntity : AB_BusinessObjectEntityBase
    {
        /// <summary>
        /// Entity information is defined in the lower level entity to maximize performance by making it static
        /// </summary>
        private static AB_EntityInfo _EntityInfo;
        /// <summary>
        /// Gets metadata information about the entity
        /// </summary>
        public override AB_EntityInfo ap_EntityInfo
        {
            get => _EntityInfo;
        }

        /// <summary>
        /// Initializes static members
        /// </summary>
        static private void RG_DoStaticInit()
        {
            // Set Message and Description Primary and Secondary Resources. 
            AB_BusinessObjectEntityBase.am_GetPropertyInfo(typeof(ShippingAddressEntity), typeof(BOS.OrderManagement.Properties.MessageResource), typeof(MessageResource), typeof(BOS.OrderManagement.Properties.DescriptionResource), typeof(DescriptionResource), out _EntityInfo); 
        }

        #region Properties

        [AB_Key(ap_IsAutoGenerated=true)] 
        [AB_DoNotCopy]
        [Display(Name = "SHIPPINGADDRESSINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [AB_AutoIncrement]
        [DataMember]
        public int? ShippingAddressInternalID //Map Field: YD1SIID
        {
            get => am_GetPropertyValue(ShippingAddressInternalIDProperty);
            set => am_SetPropertyValue(ShippingAddressInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> ShippingAddressInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(ShippingAddressInternalID), DescriptionResource.SHIPPINGADDRESSINTERNALID, null); 

        [AB_ReceivedBroadcastDataMember("CustomerInternalID")]
        [Display(Name = "CUSTOMERINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataMember]
        [AB_RequiredField]
        public int? CustomerInternalID //Map Field: YD1S1CID
        {
            get => am_GetPropertyValue(CustomerInternalIDProperty);
            set => am_SetPropertyValue(CustomerInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> CustomerInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(CustomerInternalID), DescriptionResource.CUSTOMERINTERNALID, null); 

        [Display(Name = "NAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [AB_BroadcastMember("ShippingAddressName", AB_DataShouldBePassed.OnPreload)]
        [DataMember]
        [AB_RequiredField]
        public string Name //Map Field: YD1SNM
        {
            get => am_GetPropertyValue(NameProperty);
            set => am_SetPropertyValue(NameProperty, value);
        }
        public static AB_PropertyMetadata<string> NameProperty = am_CreatePropertyMetaData<string>(nameof(Name), DescriptionResource.NAME, null); 

        [Display(Name = "CONTACTLASTNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_RequiredField]
        public string ContactLastName //Map Field: YD1SCNLN
        {
            get => am_GetPropertyValue(ContactLastNameProperty);
            set => am_SetPropertyValue(ContactLastNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactLastNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactLastName), DescriptionResource.CONTACTLASTNAME, null); 

        [Display(Name = "CONTACTFIRSTNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_RequiredField]
        public string ContactFirstName //Map Field: YD1SCNFN
        {
            get => am_GetPropertyValue(ContactFirstNameProperty);
            set => am_SetPropertyValue(ContactFirstNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactFirstNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactFirstName), DescriptionResource.CONTACTFIRSTNAME, null); 

        [Display(Name = "CONTACTMIDDLENAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactMiddleName //Map Field: YD1SCNMN
        {
            get => am_GetPropertyValue(ContactMiddleNameProperty);
            set => am_SetPropertyValue(ContactMiddleNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactMiddleNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactMiddleName), DescriptionResource.CONTACTMIDDLENAME, null); 

        [Display(Name = "CONTACTNICKNAME", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string ContactNickName //Map Field: YD1SCNNN
        {
            get => am_GetPropertyValue(ContactNickNameProperty);
            set => am_SetPropertyValue(ContactNickNameProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactNickNameProperty = am_CreatePropertyMetaData<string>(nameof(ContactNickName), DescriptionResource.CONTACTNICKNAME, null); 

        [Display(Name = "ADDRESS1", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        [AB_RequiredField]
        public string Address1 //Map Field: YD1SSHA1
        {
            get => am_GetPropertyValue(Address1Property);
            set => am_SetPropertyValue(Address1Property, value);
        }
        public static AB_PropertyMetadata<string> Address1Property = am_CreatePropertyMetaData<string>(nameof(Address1), DescriptionResource.ADDRESS1, null); 

        [Display(Name = "ADDRESS2", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        [AB_RequiredField]
        public string Address2 //Map Field: YD1SSHA2
        {
            get => am_GetPropertyValue(Address2Property);
            set => am_SetPropertyValue(Address2Property, value);
        }
        public static AB_PropertyMetadata<string> Address2Property = am_CreatePropertyMetaData<string>(nameof(Address2), DescriptionResource.ADDRESS2, null); 

        [Display(Name = "ADDRESS3", ResourceType = typeof(DescriptionResource))]
        [AB_Length(30)]
        [DataMember]
        [AB_RequiredField]
        public string Address3 //Map Field: YD1SSHA3
        {
            get => am_GetPropertyValue(Address3Property);
            set => am_SetPropertyValue(Address3Property, value);
        }
        public static AB_PropertyMetadata<string> Address3Property = am_CreatePropertyMetaData<string>(nameof(Address3), DescriptionResource.ADDRESS3, null); 

        [Display(Name = "POSTALCODE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        [AB_RequiredField]
        public string PostalCode //Map Field: YD1SSHPC
        {
            get => am_GetPropertyValue(PostalCodeProperty);
            set => am_SetPropertyValue(PostalCodeProperty, value);
        }
        public static AB_PropertyMetadata<string> PostalCodeProperty = am_CreatePropertyMetaData<string>(nameof(PostalCode), DescriptionResource.POSTALCODE, null); 

        [Display(Name = "COUNTRY", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        [AB_RequiredField]
        public string Country //Map Field: YD1SSHCY
        {
            get => am_GetPropertyValue(CountryProperty);
            set => am_SetPropertyValue(CountryProperty, value);
        }
        public static AB_PropertyMetadata<string> CountryProperty = am_CreatePropertyMetaData<string>(nameof(Country), DescriptionResource.COUNTRY, null);

        [Display(Name = "TELEPHONE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(20)]
        [DataMember]
        public string Telephone //Map Field: YD1STL
        {
            get => am_GetPropertyValue(TelephoneProperty);
            set => am_SetPropertyValue(TelephoneProperty, value);
        }
        public static AB_PropertyMetadata<string> TelephoneProperty = am_CreatePropertyMetaData<string>(nameof(Telephone), DescriptionResource.TELEPHONE, null); 

        [Display(Name = "EMAIL", ResourceType = typeof(DescriptionResource))]
        [AB_Length(50)]
        [DataMember]
        public string Email //Map Field: YD1SEM
        {
            get => am_GetPropertyValue(EmailProperty);
            set => am_SetPropertyValue(EmailProperty, value);
        }
        public static AB_PropertyMetadata<string> EmailProperty = am_CreatePropertyMetaData<string>(nameof(Email), DescriptionResource.EMAIL, null); 

        [Display(Name = "MEMO", ResourceType = typeof(DescriptionResource))]
        [AB_Length(100)]
        [DataMember]
        public string Memo //Map Field: YD1SM1
        {
            get => am_GetPropertyValue(MemoProperty);
            set => am_SetPropertyValue(MemoProperty, value);
        }
        public static AB_PropertyMetadata<string> MemoProperty = am_CreatePropertyMetaData<string>(nameof(Memo), DescriptionResource.MEMO, null); 

        [Display(Name = "PURCHASEPOINTS", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataMember]
        public int? PurchasePoints //Map Field: YD1SPRPT
        {
            get => am_GetPropertyValue(PurchasePointsProperty);
            set => am_SetPropertyValue(PurchasePointsProperty, value);
        }
        public static AB_PropertyMetadata<int?> PurchasePointsProperty = am_CreatePropertyMetaData<int?>(nameof(PurchasePoints), DescriptionResource.PURCHASEPOINTS, null); 

        [Display(Name = "CREATEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [AB_CreateDate]
        [DataMember]
        public DateTime? CreateDate //Map Field: YD1SCRDT
        {
            get => am_GetPropertyValue(CreateDateProperty);
            set => am_SetPropertyValue(CreateDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> CreateDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDate), DescriptionResource.CREATEDATE, null); 

        [Display(Name = "CREATETIME", ResourceType = typeof(DescriptionResource))]
        [AB_CreateTime]
        [DataMember]
        public TimeSpan? CreateTime //Map Field: YD1SCRTM
        {
            get => am_GetPropertyValue(CreateTimeProperty);
            set => am_SetPropertyValue(CreateTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> CreateTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(CreateTime), DescriptionResource.CREATETIME, null); 

        [Display(Name = "CREATEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_CreateUser]
        [DataMember]
        public string CreateUser //Map Field: YD1SCRUS
        {
            get => am_GetPropertyValue(CreateUserProperty);
            set => am_SetPropertyValue(CreateUserProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateUserProperty = am_CreatePropertyMetaData<string>(nameof(CreateUser), DescriptionResource.CREATEUSER, null); 

        [Display(Name = "CREATEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string CreateJob //Map Field: YD1SCRJB
        {
            get => am_GetPropertyValue(CreateJobProperty);
            set => am_SetPropertyValue(CreateJobProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobProperty = am_CreatePropertyMetaData<string>(nameof(CreateJob), DescriptionResource.CREATEJOB, null); 

        [Display(Name = "CREATEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string CreateJobNumber //Map Field: YD1SCRJN
        {
            get => am_GetPropertyValue(CreateJobNumberProperty);
            set => am_SetPropertyValue(CreateJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> CreateJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(CreateJobNumber), DescriptionResource.CREATEJOBNUMBER, null); 

        [Display(Name = "LASTCHANGEDATE", ResourceType = typeof(DescriptionResource))]
        [AB_ApplyDateFormat]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [AB_LastChangeDate]
        [DataMember]
        public DateTime? LastChangeDate //Map Field: YD1SLCDT
        {
            get => am_GetPropertyValue(LastChangeDateProperty);
            set => am_SetPropertyValue(LastChangeDateProperty, value);
        }
        public static AB_PropertyMetadata<DateTime?> LastChangeDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDate), DescriptionResource.LASTCHANGEDATE, null); 

        [Display(Name = "LASTCHANGETIME", ResourceType = typeof(DescriptionResource))]
        [AB_LastChangeTime]
        [DataMember]
        public TimeSpan? LastChangeTime //Map Field: YD1SLCTM
        {
            get => am_GetPropertyValue(LastChangeTimeProperty);
            set => am_SetPropertyValue(LastChangeTimeProperty, value);
        }
        public static AB_PropertyMetadata<TimeSpan?> LastChangeTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(LastChangeTime), DescriptionResource.LASTCHANGETIME, null); 

        [Display(Name = "LASTCHANGEUSER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [AB_LastChangeUser]
        [DataMember]
        public string LastChangeUser //Map Field: YD1SLCUS
        {
            get => am_GetPropertyValue(LastChangeUserProperty);
            set => am_SetPropertyValue(LastChangeUserProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeUserProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeUser), DescriptionResource.LASTCHANGEUSER, null); 

        [Display(Name = "LASTCHANGEJOB", ResourceType = typeof(DescriptionResource))]
        [AB_Length(10)]
        [DataMember]
        public string LastChangeJob //Map Field: YD1SLCJB
        {
            get => am_GetPropertyValue(LastChangeJobProperty);
            set => am_SetPropertyValue(LastChangeJobProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJob), DescriptionResource.LASTCHANGEJOB, null); 

        [Display(Name = "LASTCHANGEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(6)]
        [DataMember]
        public string LastChangeJobNumber //Map Field: YD1SLCJN
        {
            get => am_GetPropertyValue(LastChangeJobNumberProperty);
            set => am_SetPropertyValue(LastChangeJobNumberProperty, value);
        }
        public static AB_PropertyMetadata<string> LastChangeJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJobNumber), DescriptionResource.LASTCHANGEJOBNUMBER, null);

		[Display(Name = "CREATEDATETIME", ResourceType = typeof(DescriptionResource))]
		[DataType(DataType.DateTime)]
		[DisplayFormat(DataFormatString = "MM/dd/yyyy hh:mm:ss tt", ApplyFormatInEditMode = true)]
		[AB_VirtualMember("CreateDate", "CreateTime")]
		public DateTime? CreateDateTime
		{
			get
			{
				if (CreateDate.HasValue && CreateTime.HasValue)
				{
					var date = CreateDate.Value.ToString("MM/dd/yyyy");
					var time = DateTime.Today.Add(CreateTime.Value).ToString("hh:mm:ss tt");

					if (DateTime.TryParse(date + " " + time, out var createDateTime))
						return createDateTime;
					else return null;
				}
				else return null;
			}
		}
		public static AB_PropertyMetadata<DateTime?> CreateDateTimeProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDateTime), DescriptionResource.CREATEDATETIME, null);

		[Display(Name = "LASTCHANGEDATETIME", ResourceType = typeof(DescriptionResource))]
		[DataType(DataType.DateTime)]
		[DisplayFormat(DataFormatString = "MM/dd/yyyy hh:mm:ss tt", ApplyFormatInEditMode = true)]
		[AB_VirtualMember("LastChangeDate", "LastChangeTime")]
		public DateTime? LastChangeDateTime
		{
			get
			{
				if (LastChangeDate.HasValue && LastChangeTime.HasValue)
				{
					var date = LastChangeDate.Value.ToString("MM/dd/yyyy");
					var time = DateTime.Today.Add(LastChangeTime.Value).ToString("hh:mm:ss tt");

					if (DateTime.TryParse(date + " " + time, out var lastChangeDateTime))
						return lastChangeDateTime;
					else return null;
				}
				else return null;
			}
		}
		public static AB_PropertyMetadata<DateTime?> LastChangeDateTimeProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDateTime), DescriptionResource.LASTCHANGEDATETIME, null);

		#region Customer Fields

		[Display(Name = "CUSTOMERNAME", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        public string CustomerName
        {
            get => am_GetPropertyValue(CustomerNameProperty);
            set => am_SetPropertyValue(CustomerNameProperty, value);
        }
        public static AB_PropertyMetadata<string> CustomerNameProperty = am_CreatePropertyMetaData<string>(nameof(CustomerName), DescriptionResource.CUSTOMERNAME, null);

        [Display(Name = "CUSTOMERCONTACTFULLNAME", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        public string CustomerContactFullName
        {
            get => am_GetPropertyValue(CustomerContactFullNameProperty);
            set => am_SetPropertyValue(CustomerContactFullNameProperty, value);
        }
        public static AB_PropertyMetadata<string> CustomerContactFullNameProperty = am_CreatePropertyMetaData<string>(nameof(CustomerContactFullName), DescriptionResource.CUSTOMERCONTACTFULLNAME, null);

        [Display(Name = "CUSTOMERTELEPHONE", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        public string CustomerTelephone
        {
            get => am_GetPropertyValue(CustomerTelephoneProperty);
            set => am_SetPropertyValue(CustomerTelephoneProperty, value);
        }
        public static AB_PropertyMetadata<string> CustomerTelephoneProperty = am_CreatePropertyMetaData<string>(nameof(CustomerTelephone), DescriptionResource.CUSTOMERTELEPHONE, null);

        [Display(Name = "CUSTOMERBILLINGADDRESSLINE", ResourceType = typeof(DescriptionResource))]
        [DataMember]
        public string CustomerBillingAddressLine
        {
            get => am_GetPropertyValue(CustomerBillingAddressLineProperty);
            set => am_SetPropertyValue(CustomerBillingAddressLineProperty, value);
        }
        public static AB_PropertyMetadata<string> CustomerBillingAddressLineProperty = am_CreatePropertyMetaData<string>(nameof(CustomerBillingAddressLine), DescriptionResource.CUSTOMERBILLINGADDRESSLINE, null);

        #endregion

        #region Additional Fields

        [Display(Name = "CONTACTFULLNAME", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("ContactFirstName", "ContactMiddleName", "ContactLastName")]
        public string ContactFullName
        {
            get
            {
                var nickname = string.IsNullOrWhiteSpace(ContactNickName) ? null : @"""" + ContactNickName + @"""";
                var array = new[] { ContactFirstName, ContactMiddleName, ContactLastName, nickname };
                string contactFullName = string.Join(" ", array.Where(s => !string.IsNullOrEmpty(s)));

                return contactFullName;
            }
        }
        public static AB_PropertyMetadata<string> ContactFullNameProperty = am_CreatePropertyMetaData<string>("ContactFullName", DescriptionResource.CONTACTFULLNAME, null);

        [Display(Name = "CONTACTFULLNAME", ResourceType = typeof(DescriptionResource))]
        [AB_ReadOnly]
        [DataMember]
        public string ContactFullNameSearch
        {
            get => am_GetPropertyValue(ContactFullNameSearchProperty);
            set => am_SetPropertyValue(ContactFullNameSearchProperty, value);
        }
        public static AB_PropertyMetadata<string> ContactFullNameSearchProperty = am_CreatePropertyMetaData<string>(nameof(ContactFullNameSearch), DescriptionResource.CONTACTFULLNAME, null);

        [Display(Name = "SHIPPINGADDRESSLINE", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("Address1", "Address2", "Address3", "PostalCode", "Country")]
        [AB_ReadOnly]
        public string ShippingAddressLine
        {
            get
            {
                var shippingAddressLine = AB_AddressHelper.am_FullAddressLine(addressLine1: Address1, city: Address2, state: Address3, zip: PostalCode, country: Country);
                return shippingAddressLine;
            }
        }
        public static AB_PropertyMetadata<string> ShippingAddressLineProperty = am_CreatePropertyMetaData<string>("ShippingAddressLine", DescriptionResource.SHIPPINGADDRESSLINE, null);

        [Display(Name = "SHIPPINGADDRESSBLOCK", ResourceType = typeof(BOS.OrderManagement.Shared.Properties.DescriptionResource))]
        [AB_VirtualMember("Address1", "Address2", "Address3", "PostalCode", "Country")]
        [AB_ReadOnly]
        public string ShippingAddressBlock
        {
            get
            {
                var shippingAddressBlock = AB_AddressHelper.am_FullAddressBlock(addressLine1: Address1, city: Address2, state: Address3, zip: PostalCode, country: Country);
                return shippingAddressBlock;
            }
        }
        public static AB_PropertyMetadata<string> ShippingAddressBlockProperty = am_CreatePropertyMetaData<string>("ShippingAddressBlock", DescriptionResource.SHIPPINGADDRESSBLOCK, null);

        [Display(Name = "SHIPPINGADDRESSLINE", ResourceType = typeof(DescriptionResource))]
        [AB_ReadOnly]
        [DataMember]
        public string ShippingAddressLineSearch
        {
            get => am_GetPropertyValue(ShippingAddressLineSearchProperty);
            set => am_SetPropertyValue(ShippingAddressLineSearchProperty, value);
        }
        public static AB_PropertyMetadata<string> ShippingAddressLineSearchProperty = am_CreatePropertyMetaData<string>(nameof(ShippingAddressLineSearch), DescriptionResource.SHIPPINGADDRESSLINE, null);

        #endregion

        public int MemoCharacterCount
        {
            get => Memo?.Length ?? 0;
            set
            {
                am_SetPropertyValue(MemoCharacterCountProperty, value);
                am_FirePropertyChanged(MemoCharacterCountStrProperty);
            }
        }
        public static AB_PropertyMetadata<int> MemoCharacterCountProperty = am_CreatePropertyMetaData<int>(nameof(MemoCharacterCount), null, 0);

        public string MemoCharacterCountStr
        {
            get
            {
                return string.Format("{0}/100", MemoCharacterCount);
            }
        }
        public static AB_PropertyMetadata<string> MemoCharacterCountStrProperty = am_CreatePropertyMetaData<string>(nameof(MemoCharacterCountStr), null, null);

        #endregion //Properties

        #region Property Overrides

        // Title
        public override string ap_Title
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_Title))
                {
                    StringBuilder title = new StringBuilder();
                    switch (ap_TitleMode)
                    {
                        case AB_TitleMode.New:
                        case AB_TitleMode.NewFor:
                        case AB_TitleMode.Copy:
                            title.AppendFormat("{0}", MessageResource.TITLENEW);
                            break;
                        case AB_TitleMode.Display:
                            title.AppendFormat("{0}", MessageResource.TITLEDISPLAY);
                            break;
                        case AB_TitleMode.Open:
                            title.AppendFormat("{0}", MessageResource.TITLEOPEN);
                            break;
                        case AB_TitleMode.Subbrowser:
                            title.AppendFormat("{0}", MessageResource.TITLESUBBROWSER);
                            break;
                        case AB_TitleMode.Default:
                            title.AppendFormat("{0} ", MessageResource.TITLEOPEN);
                            break;
                    }
 
                    if (!string.IsNullOrWhiteSpace(Name))
                    {
                        title.AppendFormat(" - {0}", Name);
                    }
  
                    return title.ToString();
                }
                return base.ap_Title;
            }
            set
            {
                base.ap_Title = value;
            }
        }

        // Message Field
        public override string ap_MessageField
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_MessageField))
                {
                    return "\"" + ap_Title + "\"";
                }

                return base.ap_MessageField;
            }
            set
            {
                base.ap_MessageField = value;
            }
        }

        // Unique Name
        public override string ap_UniqueName
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_UniqueName))
                {
                    return "Shipping Address - ";
                }

                return base.ap_UniqueName;
            }
            set
            {
                base.ap_UniqueName = value;
            }
        }

        #endregion //Property Overrides
        /// <summary>
        /// Static constructor
        /// </summary>
        static ShippingAddressEntity()
        {
            RG_DoStaticInit();
        }


    }
}