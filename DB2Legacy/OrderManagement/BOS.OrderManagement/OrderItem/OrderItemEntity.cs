//===============================================================================================
// <A4DN_GeneratedInformation>
// This code was generated using the Accelerator for .Net Code Generator.
// <A4DN_Template Name="BOS.Module.Entity.t4" Version="8.0.0.93" GeneratedDate="5/29/2024" />
// </A4DN_GeneratedInformation>
//===============================================================================================
using A4DN.Core.BOS.Base;
using BOS.CustomerDataEntity;
using BOS.OrderManagement.Shared.Properties;
using System;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace BOS.OrderItemDataEntity
{
    /// <summary>
    /// Represents data. Contains metadata that facilitates validation and advanced databinding.
    /// </summary>
    [DataContract]
    public class OrderItemEntity : AB_BusinessObjectEntityBase
    {
        /// <summary>
        /// Entity information is defined in the lower level entity to maximize performance by making it static
        /// </summary>
        private static AB_EntityInfo _EntityInfo;
        /// <summary>
        /// Gets metadata information about the entity
        /// </summary>
        public override AB_EntityInfo ap_EntityInfo
        {
            get => _EntityInfo;
        }

        /// <summary>
        /// Initializes static members
        /// </summary>
        static private void RG_DoStaticInit()
        {
            // Set Message and Description Primary and Secondary Resources. 
            AB_BusinessObjectEntityBase.am_GetPropertyInfo(typeof(OrderItemEntity), typeof(BOS.OrderManagement.Properties.MessageResource), typeof(MessageResource), typeof(BOS.OrderManagement.Properties.DescriptionResource), typeof(DescriptionResource), out _EntityInfo); 
        }

        #region Properties

        [AB_Key(ap_IsAutoGenerated=true)] 
        [AB_DoNotCopy]
        [Display(Name = "ORDERITEMINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(12)]
		[AB_AutoIncrement]
		[DataMember]
        public int? OrderItemInternalID //Map Field: YD1IIID
        {
            get => am_GetPropertyValue(OrderItemInternalIDProperty);
            set => am_SetPropertyValue(OrderItemInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> OrderItemInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(OrderItemInternalID), DescriptionResource.ORDERITEMINTERNALID, null); 

        [AB_ReceivedBroadcastDataMember("OrderInternalID")]
        [AB_DropdownDisplay("~/Views/Order/_OrderDropdown.cshtml", new string[] { "Source: OrderInternalID ,Target: OrderInternalID" }, ap_ShowNewButton = true, ap_ShowOpenButton = true, ap_ShowSearchButton = true)]
        [Display(Name = "ORDERNUMBER", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [AB_RequiredField]
        [DataMember]
        public int? OrderInternalID //Map Field: YD1I1OID
        {
            get => am_GetPropertyValue(OrderInternalIDProperty);
            set => am_SetPropertyValue(OrderInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> OrderInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(OrderInternalID), DescriptionResource.ORDERNUMBER, null); 

        [AB_ReceivedBroadcastDataMember("ProductInternalID")]
        [Display(Name = "PRODUCTINTERNALID", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
		[AB_RequiredField]
		[DataMember]
        public int? ProductInternalID //Map Field: YD1I1PID
        {
            get => am_GetPropertyValue(ProductInternalIDProperty);
            set => am_SetPropertyValue(ProductInternalIDProperty, value);
        }
        public static AB_PropertyMetadata<int?> ProductInternalIDProperty = am_CreatePropertyMetaData<int?>(nameof(ProductInternalID), DescriptionResource.PRODUCTINTERNALID, null); 

        [Display(Name = "QUANTITY", ResourceType = typeof(DescriptionResource))]
        [AB_Length(4)]
        [AB_DefaultValueUse(AB_RecordMode.New)]
        [AB_ValidationMethod(typeof(QuantityValidationMethod), ErrorMessage = "Quantity must be greater than 0", ap_ValidationTriggers = AB_ValidationTrigger.OnSave | AB_ValidationTrigger.OnLostFocus)]
        [DataMember]
        [AB_RequiredField]
        public int? Quantity //Map Field: YD1IQT
        {
            get => am_GetPropertyValue(QuantityProperty);
            set
            {
                am_SetPropertyValue(QuantityProperty, value);
                am_FirePropertyChanged(OrderPriceProperty);
                am_FirePropertyChanged(OrderDiscountProperty);
                am_FirePropertyChanged(OrderTotalProperty);
            }
        }
        public static AB_PropertyMetadata<int?> QuantityProperty = am_CreatePropertyMetaData<int?>(nameof(Quantity), DescriptionResource.QUANTITY, 1); 

        [Display(Name = "PERUNITPRICE", ResourceType = typeof(DescriptionResource))]
        [AB_Length(8)]
        [DataType(DataType.Currency)]
        [AB_ApplyStringFormat("C")]
        [DataMember]
        public decimal? UnitPrice //Map Field: YD1IPRUN
        {
            get => am_GetPropertyValue(UnitPriceProperty);
            set
            {
                am_SetPropertyValue(UnitPriceProperty, value);
                am_FirePropertyChanged(UnitDiscountProperty);
                am_FirePropertyChanged(OrderPriceProperty);
                am_FirePropertyChanged(OrderDiscountProperty);
                am_FirePropertyChanged(OrderTotalProperty);
            }
        }
        public static AB_PropertyMetadata<decimal?> UnitPriceProperty = am_CreatePropertyMetaData<decimal?>(nameof(UnitPrice), DescriptionResource.PERUNITPRICE, null);

        [Display(Name = "DISCOUNTPERCENT", ResourceType = typeof(DescriptionResource))]
        [AB_Length(4)]
        [AB_ApplyStringFormat("P")]
        [DataMember]
        public decimal? DiscountPercent //Map Field: YD1IDSPC
        {
            get => am_GetPropertyValue(DiscountPercentProperty);
            set
            {
                am_SetPropertyValue(DiscountPercentProperty, value);
                am_FirePropertyChanged(UnitDiscountProperty);
                am_FirePropertyChanged(OrderDiscountProperty);
                am_FirePropertyChanged(OrderTotalProperty);
            }
        }
        public static AB_PropertyMetadata<decimal?> DiscountPercentProperty = am_CreatePropertyMetaData<decimal?>(nameof(DiscountPercent), DescriptionResource.DISCOUNTPERCENT, null); 

        [Display(Name = "MEMO", ResourceType = typeof(DescriptionResource))]
        [AB_Length(100)]
        [DataMember]
        public string Memo //Map Field: YD1IM1
        {
            get => am_GetPropertyValue(MemoProperty);
            set => am_SetPropertyValue(MemoProperty, value);
        }
        public static AB_PropertyMetadata<string> MemoProperty = am_CreatePropertyMetaData<string>(nameof(Memo), DescriptionResource.MEMO, null);

		#region Virtual Fields

		[Display(Name = "UNITDISCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_Length(8)]
		[DataType(DataType.Currency)]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[AB_VirtualMember]
		public decimal? UnitDiscount
		{
			get
			{
				return UnitPrice * DiscountPercent;
			}
			set
			{
				am_SetPropertyValue(UnitDiscountProperty, UnitPrice * DiscountPercent);
			}
		}
		public static AB_PropertyMetadata<decimal?> UnitDiscountProperty = am_CreatePropertyMetaData<decimal?>(nameof(UnitDiscount), DescriptionResource.UNITDISCOUNT, null);

		[Display(Name = "ORDERPRICE", ResourceType = typeof(DescriptionResource))]
		[AB_Length(8)]
		[DataType(DataType.Currency)]
		[AB_ApplyStringFormat("C")]
		[DataMember]
		[AB_ReadOnly]
		public decimal? OrderPrice
		{
			get
			{
				return UnitPrice * Quantity;
			}
			set
			{
				am_SetPropertyValue(OrderPriceProperty, UnitPrice * Quantity);
			}
		}
		public static AB_PropertyMetadata<decimal?> OrderPriceProperty = am_CreatePropertyMetaData<decimal?>(nameof(OrderPrice), DescriptionResource.PRICE, null);

		[Display(Name = "ORDERDISCOUNT", ResourceType = typeof(DescriptionResource))]
		[AB_Length(8)]
		[DataType(DataType.Currency)]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[AB_VirtualMember]
		public decimal? OrderDiscount
		{
			get
			{
				return OrderPrice * DiscountPercent;
			}
			set
			{
				am_SetPropertyValue(OrderDiscountProperty, OrderPrice * DiscountPercent);
			}
		}
		public static AB_PropertyMetadata<decimal?> OrderDiscountProperty = am_CreatePropertyMetaData<decimal?>(nameof(OrderDiscount), DescriptionResource.DISCOUNT, null);

		[Display(Name = "ORDERTOTAL", ResourceType = typeof(DescriptionResource))]
		[AB_Length(8)]
		[DataType(DataType.Currency)]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[AB_VirtualMember]
		public decimal? OrderTotal
		{
			get
			{
				return OrderPrice - (OrderDiscount ?? 0);
			}
			set
			{
				am_SetPropertyValue(OrderTotalProperty, OrderPrice - (OrderDiscount ?? 0));
			}
		}
		public static AB_PropertyMetadata<decimal?> OrderTotalProperty = am_CreatePropertyMetaData<decimal?>(nameof(OrderTotal), DescriptionResource.TOTAL, null);

		#endregion

		#region Order Fields

		[Display(Name = "ORDERDATE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyDateFormat]
		[DataType(DataType.Date)]
		[DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
        [AB_ReadOnly]
		[DataMember]
		public DateTime? OrderDate //Map Field: YD1ODT
		{
			get => am_GetPropertyValue(OrderDateProperty);
			set => am_SetPropertyValue(OrderDateProperty, value);
		}
		public static AB_PropertyMetadata<DateTime?> OrderDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(OrderDate), DescriptionResource.ORDERDATE, null);

		[Display(Name = "ORDERTIME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public TimeSpan? OrderTime //Map Field: YD1OTM
		{
			get => am_GetPropertyValue(OrderTimeProperty);
			set => am_SetPropertyValue(OrderTimeProperty, value);
		}
		public static AB_PropertyMetadata<TimeSpan?> OrderTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(OrderTime), DescriptionResource.ORDERTIME, null);

		[Display(Name = "CUSTOMERNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string CustomerName
		{
			get => am_GetPropertyValue(CustomerNameProperty);
			set => am_SetPropertyValue(CustomerNameProperty, value);
		}
		public static AB_PropertyMetadata<string> CustomerNameProperty = am_CreatePropertyMetaData<string>(nameof(CustomerName), DescriptionResource.CUSTOMERNAME, null);

		[Display(Name = "PONUMBER", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string PurchaseOrderNumberID
		{
			get => am_GetPropertyValue(PurchaseOrderNumberIDProperty);
			set => am_SetPropertyValue(PurchaseOrderNumberIDProperty, value);
		}
		public static AB_PropertyMetadata<string> PurchaseOrderNumberIDProperty = am_CreatePropertyMetaData<string>(nameof(PurchaseOrderNumberID), DescriptionResource.PONUMBER, null);

		#endregion

		#region Product Fields

		[Display(Name = "PRODUCTCODE", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ProductCode
		{
			get { return am_GetPropertyValue(ProductCodeProperty); }
			set { am_SetPropertyValue(ProductCodeProperty, value); }
		}
		public static AB_PropertyMetadata<string> ProductCodeProperty = am_CreatePropertyMetaData<string>("ProductCode", DescriptionResource.PRODUCTCODE, null);

		[Display(Name = "PRODUCTNAME", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ProductName
		{
			get => am_GetPropertyValue(ProductNameProperty);
			set => am_SetPropertyValue(ProductNameProperty, value);
		}
		public static AB_PropertyMetadata<string> ProductNameProperty = am_CreatePropertyMetaData<string>(nameof(ProductName), DescriptionResource.PRODUCTNAME, null);

		[Display(Name = "PRODUCTCATEGORY", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ProductCategory
		{
			get => am_GetPropertyValue(ProductCategoryProperty);
			set => am_SetPropertyValue(ProductCategoryProperty, value);
		}
		public static AB_PropertyMetadata<string> ProductCategoryProperty = am_CreatePropertyMetaData<string>(nameof(ProductCategory), DescriptionResource.PRODUCTCATEGORY, null);

		[Display(Name = "PRODUCTLISTPRICE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyStringFormat("C")]
		[AB_ReadOnly]
		[DataMember]
		public decimal? ProductListPrice
		{
			get => am_GetPropertyValue(ProductListPriceProperty);
			set => am_SetPropertyValue(ProductListPriceProperty, value);
		}
		public static AB_PropertyMetadata<decimal?> ProductListPriceProperty = am_CreatePropertyMetaData<decimal?>(nameof(ProductListPrice), DescriptionResource.PRODUCTLISTPRICE, null);
		
		[Display(Name = "PRODUCTDESCRIPTION", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ProductDescription
		{
			get => am_GetPropertyValue(ProductDescriptionProperty);
			set => am_SetPropertyValue(ProductDescriptionProperty, value);
		}
		public static AB_PropertyMetadata<string> ProductDescriptionProperty = am_CreatePropertyMetaData<string>(nameof(ProductDescription), DescriptionResource.PRODUCTDESCRIPTION, null);

		[Display(Name = "IMAGEPATH", ResourceType = typeof(DescriptionResource))]
		[AB_ReadOnly]
		[DataMember]
		public string ProductImagePath
		{
			get => am_GetPropertyValue(ProductImagePathProperty);
			set => am_SetPropertyValue(ProductImagePathProperty, value);
		}
		public static AB_PropertyMetadata<string> ProductImagePathProperty = am_CreatePropertyMetaData<string>(nameof(ProductImagePath), DescriptionResource.IMAGEPATH, null);

		#endregion

		#region Audit Stamps

		[Display(Name = "CREATEDATE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyDateFormat]
		[DataType(DataType.Date)]
		[DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
		[AB_CreateDate]
		[AB_ReadOnly]
		[DataMember]
		public DateTime? CreateDate //Map Field: YD1ICRDT
		{
			get => am_GetPropertyValue(CreateDateProperty);
			set => am_SetPropertyValue(CreateDateProperty, value);
		}
		public static AB_PropertyMetadata<DateTime?> CreateDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDate), DescriptionResource.CREATEDATE, null);

		[Display(Name = "CREATETIME", ResourceType = typeof(DescriptionResource))]
		[AB_CreateTime]
		[AB_ReadOnly]
		[DataMember]
		public TimeSpan? CreateTime //Map Field: YD1ICRTM
		{
			get => am_GetPropertyValue(CreateTimeProperty);
			set => am_SetPropertyValue(CreateTimeProperty, value);
		}
		public static AB_PropertyMetadata<TimeSpan?> CreateTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(CreateTime), DescriptionResource.CREATETIME, null);

		[Display(Name = "CREATEUSER", ResourceType = typeof(DescriptionResource))]
		[AB_Length(10)]
		[AB_CreateUser]
		[AB_ReadOnly]
		[DataMember]
		public string CreateUser //Map Field: YD1ICRUS
		{
			get => am_GetPropertyValue(CreateUserProperty);
			set => am_SetPropertyValue(CreateUserProperty, value);
		}
		public static AB_PropertyMetadata<string> CreateUserProperty = am_CreatePropertyMetaData<string>(nameof(CreateUser), DescriptionResource.CREATEUSER, null);

		[Display(Name = "CREATEJOB", ResourceType = typeof(DescriptionResource))]
		[AB_Length(10)]
		[AB_ReadOnly]
		[DataMember]
		public string CreateJob //Map Field: YD1ICRJB
		{
			get => am_GetPropertyValue(CreateJobProperty);
			set => am_SetPropertyValue(CreateJobProperty, value);
		}
		public static AB_PropertyMetadata<string> CreateJobProperty = am_CreatePropertyMetaData<string>(nameof(CreateJob), DescriptionResource.CREATEJOB, null);

		[Display(Name = "CREATEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
		[AB_Length(6)]
		[AB_ReadOnly]
		[DataMember]
		public string CreateJobNumber //Map Field: YD1ICRJN
		{
			get => am_GetPropertyValue(CreateJobNumberProperty);
			set => am_SetPropertyValue(CreateJobNumberProperty, value);
		}
		public static AB_PropertyMetadata<string> CreateJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(CreateJobNumber), DescriptionResource.CREATEJOBNUMBER, null);

		[Display(Name = "LASTCHANGEDATE", ResourceType = typeof(DescriptionResource))]
		[AB_ApplyDateFormat]
		[DataType(DataType.Date)]
		[DisplayFormat(DataFormatString = "{0:d}", ApplyFormatInEditMode = true)]
		[AB_LastChangeDate]
		[AB_ReadOnly]
		[DataMember]
		public DateTime? LastChangeDate //Map Field: YD1ILCDT
		{
			get => am_GetPropertyValue(LastChangeDateProperty);
			set => am_SetPropertyValue(LastChangeDateProperty, value);
		}
		public static AB_PropertyMetadata<DateTime?> LastChangeDateProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDate), DescriptionResource.LASTCHANGEDATE, null);

		[Display(Name = "LASTCHANGETIME", ResourceType = typeof(DescriptionResource))]
		[AB_LastChangeTime]
		[AB_ReadOnly]
		[DataMember]
		public TimeSpan? LastChangeTime //Map Field: YD1ILCTM
		{
			get => am_GetPropertyValue(LastChangeTimeProperty);
			set => am_SetPropertyValue(LastChangeTimeProperty, value);
		}
		public static AB_PropertyMetadata<TimeSpan?> LastChangeTimeProperty = am_CreatePropertyMetaData<TimeSpan?>(nameof(LastChangeTime), DescriptionResource.LASTCHANGETIME, null);

		[Display(Name = "LASTCHANGEUSER", ResourceType = typeof(DescriptionResource))]
		[AB_Length(10)]
		[AB_LastChangeUser]
		[AB_ReadOnly]
		[DataMember]
		public string LastChangeUser //Map Field: YD1ILCUS
		{
			get => am_GetPropertyValue(LastChangeUserProperty);
			set => am_SetPropertyValue(LastChangeUserProperty, value);
		}
		public static AB_PropertyMetadata<string> LastChangeUserProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeUser), DescriptionResource.LASTCHANGEUSER, null);

		[Display(Name = "LASTCHANGEJOB", ResourceType = typeof(DescriptionResource))]
		[AB_Length(10)]
		[AB_ReadOnly]
		[DataMember]
		public string LastChangeJob //Map Field: YD1ILCJB
		{
			get => am_GetPropertyValue(LastChangeJobProperty);
			set => am_SetPropertyValue(LastChangeJobProperty, value);
		}
		public static AB_PropertyMetadata<string> LastChangeJobProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJob), DescriptionResource.LASTCHANGEJOB, null);

		[Display(Name = "LASTCHANGEJOBNUMBER", ResourceType = typeof(DescriptionResource))]
		[AB_Length(6)]
		[AB_ReadOnly]
		[DataMember]
		public string LastChangeJobNumber //Map Field: YD1ILCJN
		{
			get => am_GetPropertyValue(LastChangeJobNumberProperty);
			set => am_SetPropertyValue(LastChangeJobNumberProperty, value);
		}
		public static AB_PropertyMetadata<string> LastChangeJobNumberProperty = am_CreatePropertyMetaData<string>(nameof(LastChangeJobNumber), DescriptionResource.LASTCHANGEJOBNUMBER, null);

		[Display(Name = "CREATEDATETIME", ResourceType = typeof(DescriptionResource))]
		[DataType(DataType.DateTime)]
		[DisplayFormat(DataFormatString = "MM/dd/yyyy hh:mm:ss tt", ApplyFormatInEditMode = true)]
		[AB_VirtualMember("CreateDate", "CreateTime")]
		public DateTime? CreateDateTime
		{
			get
			{
				if (CreateDate.HasValue && CreateTime.HasValue)
				{
					var date = CreateDate.Value.ToString("MM/dd/yyyy");
					var time = DateTime.Today.Add(CreateTime.Value).ToString("hh:mm:ss tt");

					if (DateTime.TryParse(date + " " + time, out var createDateTime))
						return createDateTime;
					else return null;
				}
				else return null;
			}
		}
		public static AB_PropertyMetadata<DateTime?> CreateDateTimeProperty = am_CreatePropertyMetaData<DateTime?>(nameof(CreateDateTime), DescriptionResource.CREATEDATETIME, null);

		[Display(Name = "LASTCHANGEDATETIME", ResourceType = typeof(DescriptionResource))]
		[DataType(DataType.DateTime)]
		[DisplayFormat(DataFormatString = "MM/dd/yyyy hh:mm:ss tt", ApplyFormatInEditMode = true)]
		[AB_VirtualMember("LastChangeDate", "LastChangeTime")]
		public DateTime? LastChangeDateTime
		{
			get
			{
				if (LastChangeDate.HasValue && LastChangeTime.HasValue)
				{
					var date = LastChangeDate.Value.ToString("MM/dd/yyyy");
					var time = DateTime.Today.Add(LastChangeTime.Value).ToString("hh:mm:ss tt");

					if (DateTime.TryParse(date + " " + time, out var lastChangeDateTime))
						return lastChangeDateTime;
					else return null;
				}
				else return null;
			}
		}
		public static AB_PropertyMetadata<DateTime?> LastChangeDateTimeProperty = am_CreatePropertyMetaData<DateTime?>(nameof(LastChangeDateTime), DescriptionResource.LASTCHANGEDATETIME, null);

		#endregion

		public int MemoCharacterCount
        {
            get => Memo?.Length ?? 0;
            set
            {
                am_SetPropertyValue(MemoCharacterCountProperty, value);
                am_FirePropertyChanged(MemoCharacterCountStrProperty);
            }
        }
        public static AB_PropertyMetadata<int> MemoCharacterCountProperty = am_CreatePropertyMetaData<int>(nameof(MemoCharacterCount), null, 0);

        public string MemoCharacterCountStr
        {
            get
            {
                return string.Format("{0}/100", MemoCharacterCount);
            }
        }
        public static AB_PropertyMetadata<string> MemoCharacterCountStrProperty = am_CreatePropertyMetaData<string>(nameof(MemoCharacterCountStr), null, null);

        #endregion //Properties

        #region Property Overrides

        // Title
        public override string ap_Title
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_Title))
                {
                    StringBuilder title = new StringBuilder();
                    switch (ap_TitleMode)
                    {
                        case AB_TitleMode.New:
                        case AB_TitleMode.NewFor:
                        case AB_TitleMode.Copy:
                            title.AppendFormat("{0}", MessageResource.TITLENEW);
                            break;
                        case AB_TitleMode.Display:
                            title.AppendFormat("{0}", MessageResource.TITLEDISPLAY);
                            break;
                        case AB_TitleMode.Open:
                            title.AppendFormat("{0}", MessageResource.TITLEOPEN);
                            break;
                        case AB_TitleMode.Subbrowser:
                            title.AppendFormat("{0}", MessageResource.TITLESUBBROWSER);
                            break;
                        case AB_TitleMode.Default:
                            title.AppendFormat("{0} ", MessageResource.TITLEOPEN);
                            break;
                    }
 
                    if (OrderInternalID.HasValue)
                    {
                        title.AppendFormat(" - {0}", OrderInternalID.Value);
                    }

                    if (!string.IsNullOrWhiteSpace(ProductName))
                    {
                        title.AppendFormat(" - {0}", ProductName);
                    }

                    return title.ToString();
                }
                return base.ap_Title;
            }
            set
            {
                base.ap_Title = value;
            }
        }

        // Message Field
        public override string ap_MessageField
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_MessageField))
                {
                    return "\"" + ap_Title + "\"";
                }

                return base.ap_MessageField;
            }
            set
            {
                base.ap_MessageField = value;
            }
        }

        // Unique Name
        public override string ap_UniqueName
        {
            get
            {
                if (string.IsNullOrEmpty(base.ap_UniqueName))
                {
                    return "Order Item - ";
                }

                return base.ap_UniqueName;
            }
            set
            {
                base.ap_UniqueName = value;
            }
        }

        #endregion //Property Overrides
        /// <summary>
        /// Static constructor
        /// </summary>
        static OrderItemEntity()
        {
            RG_DoStaticInit();
        }


    }
}