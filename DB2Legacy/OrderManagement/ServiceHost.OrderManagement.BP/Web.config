<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- A4DN_Tag: This section contains info that is accessed through AB_DataPropertyController. -->
  <appSettings>
    <add key="UniqueSystemNameForRemoteServiceAgent" value="OrderManagementWCF" />
    <add key="AssemblyNameWithConnectionParms" value="ServiceHost.OrderManagement.BP" />
    <add key="FrameworkDalType" value="MSSql" />
    <add key="Feature.Caching.AllowSessionUse" value="False" />
    <!--Logging Settings -->
    <add key="Logging.Enabled" value="True" />
    <add key="Logging.AssemblyName" value="A4DN.Core.BOS.Logging.dll" />
    <add key="Logging.ClassName" value="A4DN.Core.BOS.Logging.AB_NLogLogger" />
    <!--Valid values are "Debug," "Info," "Warn," "Error," "Fatal" (Debug is the most verbose, Fatal is the least.)-->
    <add key="Logging.LoggerLevel" value="Error" />
    <add key="Logging.Async" value="True" />
    <add key="Logging.LogPath" value="%APPDATA%\Accelerator for .NET\Logging\OrderManagement" />
    <!-- Remote Logging Settings -->
    <add key="Logging.RemoteLoggingEnabled" value="True" />
    <add key="Logging.RemoteLogging.UseAsync" value="False" />
    <add key="Logging.RemoteLoggerLevel" value="Error" />
    <!-- System Settings -->
    <add key="Dal.UseOriginalValueForPrimaryKeyUpdate" value="true" />
    <add key="Dal.UseQuotesWithDB2FileAndFieldNames" value="true" />
    <!-- <add key="DbTrueEquivalentDefault" value="Y" /> -->
    <!-- <add key="DbFalseEquivalentDefault" value="N" /> -->
    <!-- <add key="System.UseLogonDBCredentials" value="true" /> -->
  </appSettings>
  <system.web>
    <!--
			Set compilation debug="true" to insert debugging 
			symbols into the compiled page. Because this 
			affects performance, set this value to true only 
			during development.
		-->
    <compilation debug="true" targetFramework="4.5.2">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
			The <authentication> section enables configuration 
			of the security authentication mode used by 
			ASP.NET to identify an incoming user. 
		-->
    <authentication mode="Windows" />
    <!--
			The <customErrors> section enables configuration 
			of what to do if/when an unhandled error occurs 
			during the execution of a request. Specifically, 
			it enables developers to configure html error pages 
			to be displayed in place of a error stack trace.

		<customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm" />
			<error statusCode="404" redirect="FileNotFound.htm" />
		</customErrors>
		-->
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </controls>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx" />
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false" />
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v4.0" />
        <providerOption name="WarnAsError" value="false" />
      </compiler>
    </compilers>
  </system.codedom>
  <!--
		The system.webServer section is required for running ASP.NET AJAX under Internet
		Information Services 7.0.  It is not necessary for previous version of IIS.
	-->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules>
      <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
  </system.webServer>
  <system.serviceModel>
    <bindings>
      <!-- A4DN_Tag: Binding Quota Size -->
      <basicHttpBinding>
        <binding name="BasicHttpWithBigQuota" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="64" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <!-- For SSL Deployment, uncomment the <security> element below -->
          <security mode="Transport"><transport clientCredentialType="Windows"/></security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <!-- A4DN_Tag: This needs to be set to allow Silverlight to call the web services.-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
    <services>
      <!-- A4DN_Tag: This is the definition of a service.  The name needs to match what was entered into the Service attribute in the .svc file. It is namepace.DALobject.  
			 the contract for the basicHttpBinding needs to match the interface that the DAL implements.  It is in the format namepace.Interface-->
      <!--A4DN_Tag: Framework Service to access Framework Defintion -->
      <service name="A4DN.Core.BOS.FrameworkDAL.AB_FrameworkDataDALForLANSA" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="A4DN.Core.BOS.FrameworkDAL.AB_IFrameworkDALServiceContract" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.QueryResultsBusinessProcess.QueryResultsBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.QueryResultsBusinessProcess.IQueryResultsBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.CustomerBusinessProcess.CustomerBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.CustomerBusinessProcess.ICustomerBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.OrderItemBusinessProcess.OrderItemBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.OrderItemBusinessProcess.IOrderItemBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.OrderBusinessProcess.OrderBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.OrderBusinessProcess.IOrderBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.ProductBusinessProcess.ProductBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.ProductBusinessProcess.IProductBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="BOS.ShippingAddressBusinessProcess.ShippingAddressBP" behaviorConfiguration="ServiceHost.OrderManagement.BP.Service1Behavior">
        <endpoint address="" binding="basicHttpBinding" contract="BOS.ShippingAddressBusinessProcess.IShippingAddressBPServiceContract" bindingConfiguration="BasicHttpWithBigQuota" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <!-- A4DN_Tag: This behavior is referenced by all the service definitions. When Deploying, you may want to set these to false.-->
        <behavior name="ServiceHost.OrderManagement.BP.Service1Behavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>