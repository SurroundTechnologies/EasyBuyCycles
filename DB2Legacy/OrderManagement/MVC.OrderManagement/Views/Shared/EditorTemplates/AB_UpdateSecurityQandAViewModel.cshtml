@using A4DN.Core.MVC.AccountRegistration
@using A4DN.Core.MVC.Shared;
@using A4DN.Core.MVC.Shared.Infrastructure.Helpers
@model AB_UpdateSecurityQandAViewModel
@{
    var questions = AB_FrameworkHelper.ap_SecurityQuestions;
    questions.ForEach(sli => sli.Selected = sli.Value == Model.SecurityQuestion);
}
@helper RenderField(string fieldName, string icon, string fieldType, string placeholder, string autocomplete, bool isRequired)
{
    <section>
        <label class="label @(isRequired ? "required" : "")">@Html.Label(fieldName)</label>
        <label class="@(fieldType == "textarea" ? "textarea" : "input")">
            <i class="icon-append fa @icon"></i>
            @if (fieldType == "textarea")
            {
                <textarea rows="3" name="@Html.Name(fieldName)" placeholder="@placeholder" autocomplete="@autocomplete" @Html.am_UnobtrusiveValidationAttributes(fieldName)>@Html.Value(fieldName)</textarea>
            }
            else
            {
                <input type="@fieldType" name="@Html.Name(fieldName)" placeholder="@placeholder" autocomplete="@autocomplete" value="@Html.Value(fieldName)" @Html.am_UnobtrusiveValidationAttributes(fieldName)>
            }
            @Html.ValidationMessage(fieldName)
        </label>
    </section>
}
@using (Html.BeginForm("UpdateSecurityQA", "AccountSettings", FormMethod.Post, new { @class = "smart-form client-form", role = "form", id = "update-qanda-form" }))
{
    <fieldset>
        @RenderField("CurrentPassword", "fa-lock", "password", Resources.DescriptionResource.EnterYourCurrentPassword, "current-password", true)
        @RenderField("SecurityQuestion", "fa-question", "text", Resources.DescriptionResource.EnterQuestionIdPasswordRecovery, "off", true)
        <section style="margin-top: -10px;">
            @if (questions.Count > 0)
            {
                <label class="select">
                    <select id="security-question-suggestions" class="@(String.IsNullOrWhiteSpace(Model.SecurityQuestion) ? "no-selection" : null)" data-for="[name='@Html.NameFor(m => m.SecurityQuestion)']">
                        @if (!questions.Any(q => q.Value == ""))
                        {
                            <option value="">@Resources.DescriptionResource.OrChooseQuestion</option>
                        }
                        @foreach (var sli in questions)
                        {
                            <option value="@sli.Value" @(sli.Selected ? "selected" : null)>@sli.Text</option>
                        }
                    </select>
                    <i></i>
                </label>
            }
        </section>
        @RenderField("SecurityAnswer", "fa-pencil", "text", Resources.DescriptionResource.EnterSecurityQuestionAnswer, "off", true)
    </fieldset>

    <footer>
        <button class="btn btn-primary" type="submit">@Resources.DescriptionResource.Update &#x276f;</button>
    </footer>
}