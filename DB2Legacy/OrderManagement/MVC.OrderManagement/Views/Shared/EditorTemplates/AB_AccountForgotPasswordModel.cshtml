@using A4DN.Core.MVC.Shared
@using A4DN.Core.MVC.Shared.Infrastructure.Helpers
@model A4DN.Core.MVC.AccountRegistration.AB_AccountForgotPasswordModel
@{
    Model.ConfirmPassword = null;   // Don't prepopulate the ConfirmPassword field
}
<style>
    label.required::after {
        content: "*";
        color: #ff0000;
        padding-left: 0.25em;
    }
</style>
@helper RenderField(string fieldName, string icon, string fieldType, string placeholder, string autocomplete, bool isRequired)
{
    <section>
        <label class="label @(isRequired ? "required" : "")">@Html.Label(fieldName)</label>
        <label class="@(fieldType == "textarea" ? "textarea" : "input")">
            <i class="icon-append fa @icon"></i>
            @if (fieldType == "textarea")
            {
                <textarea rows="3" name="@Html.Name(fieldName)" placeholder="@placeholder" autocomplete="@autocomplete" @Html.am_UnobtrusiveValidationAttributes(fieldName)>@Html.Value(fieldName)</textarea>
            }
            else
            {
                <input type="@fieldType" name="@Html.Name(fieldName)" placeholder="@placeholder" autocomplete="@autocomplete" value="@Html.Value(fieldName)" @Html.am_UnobtrusiveValidationAttributes(fieldName)>
            }
            @Html.ValidationMessage(fieldName)
        </label>
    </section>
}
@using (Html.BeginForm("ForgotPassword", "SYS_Account", FormMethod.Post, new { @class = "smart-form client-form", role = "form", id = "forgot-password-form" }))
{
    <input type="hidden" name="@Html.NameFor(m => m.ap_StageNumber)" value="@Html.ValueFor(m => m.ap_StageNumber)" />

    <header>@Resources.DescriptionResource.PasswordRecovery</header>
    @Html.AntiForgeryToken()
    @Html.ValidationBootstrap()

    if (!string.IsNullOrWhiteSpace(Model.ap_ErrorMessage))
    {
        <div class="alert alert-danger @Model.ap_ErrorLevel">
            @Model.ap_ErrorMessage
        </div>
    }

    if (Model.ap_StageNumber == 0)
    {
        <fieldset>
            @RenderField("UserID", "fa-user", "text", Resources.DescriptionResource.EnterYourUsername, "username", true)
        </fieldset>
        <footer>
            <button type="submit" class="btn btn-primary">@Resources.DescriptionResource.Submit</button>
        </footer>
    }
    else if (Model.ap_StageNumber == 1)
    {
        <fieldset>
            <section>
                <label class="label">@Html.LabelFor(m => m.UserSecurityQuestion)</label>
                <label class="input">
                    <i class="icon-append fa fa-question"></i>
                    <input type="text" readonly value="@Html.ValueFor(m => m.UserSecurityQuestion)" />
                </label>
            </section>
            @RenderField("UserSecurityAnswer", "fa-pencil", "text", Resources.DescriptionResource.EnterTheAnswerToYourSecurityQuestion, "off", true)
        </fieldset>
        <footer>
            <button type="submit" class="btn btn-primary">@Resources.DescriptionResource.Submit</button>
        </footer>
    }
    else if (Model.ap_StageNumber == 2)
    {
        <div class="alert alert-block alert-success">
            <h4 class="alert-heading"><i class="fa fa-check-square-o"></i>@Resources.DescriptionResource.CheckYourEmail</h4>
            <p>@Resources.DescriptionResource.PasswordRecoveryCodeEmail</p>
        </div>
        <fieldset>
            @RenderField("ap_UserSuppliedCode", "fa-pencil", "text", Resources.DescriptionResource.EnterCodeFromRecoveryEmail, "off", true)
            @RenderField("Password", "fa-lock", "password", "", "new-password", true)
            @RenderField("ConfirmPassword", "fa-lock", "password", "", "off", true)
        </fieldset>
        <footer>
            <a class="btn btn-default pull-left" href="@Url.Action("ForgotPassword", "SYS_Account", new { rs = 1 })">Back</a>
            <button type="submit" class="btn btn-primary">@Resources.DescriptionResource.Submit</button>
        </footer>
    }
}